<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Simplation.WANG&#39;s Blogs</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-07-17T11:26:45.062Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Simplation.WANG</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iOS 错误整理</title>
    <link href="http://yoursite.com/2019/07/16/iOS%20%E9%94%99%E8%AF%AF%E6%95%B4%E7%90%86/"/>
    <id>http://yoursite.com/2019/07/16/iOS 错误整理/</id>
    <published>2019-07-16T12:00:25.000Z</published>
    <updated>2019-07-17T11:26:45.062Z</updated>
    
    <content type="html"><![CDATA[<h5 id="1-App-Transport-Security-has-blocked-a-cleartext-HTTP-http-resource-load-since-it-is-insecure-Temporary-exceptions-can-be-configured-via-your-app’s-Info-plist-file"><a href="#1-App-Transport-Security-has-blocked-a-cleartext-HTTP-http-resource-load-since-it-is-insecure-Temporary-exceptions-can-be-configured-via-your-app’s-Info-plist-file" class="headerlink" title="1. App Transport Security has blocked a cleartext HTTP (http://) resource load since it is insecure. Temporary exceptions can be configured via your app’s Info.plist file."></a>1. App Transport Security has blocked a cleartext HTTP (http://) resource load since it is insecure. Temporary exceptions can be configured via your app’s Info.plist file.</h5><p><strong><em>错误描述</em></strong>：创建App使用网络请求的时候，Log信息如下：App Transport Security has blocked a cleartext HTTP (http://) resource load since it is insecure. Temporary exceptions can be configured via your app’s<br>Info.plist file.新特性要求App内访问网络请求，要采用 HTTPS 协议。</p><p><strong><em>解决办法</em></strong>：</p><p>​                1&gt;在 Info.plist 中添加类型为 Dictionary 的 NSAppTransportSecurity ;</p><p>​                2&gt;在 NSAppTransportSecurity 下添加 Boolean 类型的 NSAllowsArbitraryLoads 类型,值设为 YES;</p><h5 id="2-Declaration-of-sysctlbyname’-must-be-imported-from-module-‘Darwin-sys-sysctl’-before-it-is-required"><a href="#2-Declaration-of-sysctlbyname’-must-be-imported-from-module-‘Darwin-sys-sysctl’-before-it-is-required" class="headerlink" title="2. Declaration of sysctlbyname’ must be imported from module ‘Darwin.sys.sysctl’ before it is required"></a>2. Declaration of sysctlbyname’ must be imported from module ‘Darwin.sys.sysctl’ before it is required</h5><p><strong><em>解决方法</em></strong>：缺少相应的头文件，进行导入#import 操作即可。</p><h5 id="3-ERROR-ITMS-90717-“Invalid-App-Store-Icon-The-App-Store-Icon-in-the-asset-catalog-in-‘-app’-can’t-be-transparent-nor-contain-an-alpha-channel-”"><a href="#3-ERROR-ITMS-90717-“Invalid-App-Store-Icon-The-App-Store-Icon-in-the-asset-catalog-in-‘-app’-can’t-be-transparent-nor-contain-an-alpha-channel-”" class="headerlink" title="3. ERROR ITMS-90717: “Invalid App Store Icon. The App Store Icon in the asset catalog in ‘*.app’ can’t be transparent nor contain an alpha channel.”"></a>3. ERROR ITMS-90717: “Invalid App Store Icon. The App Store Icon in the asset catalog in ‘*.app’ can’t be transparent nor contain an alpha channel.”</h5><p><img src="/.com//E:%5CHEXO%5Cthemes%5Cnext%5Csource%5Cimages%5C%E9%94%99%E8%AF%AF%E6%88%AA%E5%9B%BE.jpg" alt="错误截图"></p><p><strong><em>解决办法</em></strong>：上传 AppStore 出现的图片问题，因为图片含有 alpha 通道或者透明度，直接打开图片，重新导出，去掉勾选的 Alpha 复选框，重新打包上传。</p><h5 id="4-ERROR-ITMS-4238-“Redundant-Binary-Upload-There-already-exists-a-binary-upload-with-build-version-‘1’-for-train-‘1-0’”-at-SoftwareAssets-PreReleaseSoftwareAsset"><a href="#4-ERROR-ITMS-4238-“Redundant-Binary-Upload-There-already-exists-a-binary-upload-with-build-version-‘1’-for-train-‘1-0’”-at-SoftwareAssets-PreReleaseSoftwareAsset" class="headerlink" title="4. ERROR ITMS-4238: “Redundant Binary Upload. There already exists a binary upload with build version ‘1’ for train ‘1.0’” at SoftwareAssets/PreReleaseSoftwareAsset"></a>4. ERROR ITMS-4238: “Redundant Binary Upload. There already exists a binary upload with build version ‘1’ for train ‘1.0’” at SoftwareAssets/PreReleaseSoftwareAsset</h5><p><strong><em>解决办法</em></strong>：上传 AppStore 版本重复问题，存在一个版本号为 1.0 的二进制文件，需要重新修改 version 和 build，建议两个保持一致。然后再进行上传操作 </p><p><img src="/.com//E:%5CHEXO%5Cthemes%5Cnext%5Csource%5Cimages%5C%E4%BF%AE%E6%94%B9%E7%89%88%E6%9C%AC%E5%8F%B7.jpg" alt="修改版本号"></p><h5 id="5-This-app-has-crashed-because-it-attempted-to-access-privacy-sensitive-data-without-a-usage-description-The-app’s-Info-plist-must-contain-an-NSPhotoLibraryAddUsageDescription-key-with-a-string-value-explaining-to-the-user-how-the-app-uses-this-data"><a href="#5-This-app-has-crashed-because-it-attempted-to-access-privacy-sensitive-data-without-a-usage-description-The-app’s-Info-plist-must-contain-an-NSPhotoLibraryAddUsageDescription-key-with-a-string-value-explaining-to-the-user-how-the-app-uses-this-data" class="headerlink" title="5. This app has crashed because it attempted to access privacy-sensitive data without a usage description.  The app’s Info.plist must contain an NSPhotoLibraryAddUsageDescription key with a string value explaining to the user how the app uses this data"></a>5. This app has crashed because it attempted to access privacy-sensitive data without a usage description.  The app’s Info.plist must contain an NSPhotoLibraryAddUsageDescription key with a string value explaining to the user how the app uses this data</h5><p><strong><em>解决办法</em></strong>：访问相册或者相机的操作，缺少相关的操作权限，未配置Info.plist文件。<br>在Info.plist文件中添加KEY为：Privacy - Photo Library Additions Usage Description的字段，类型是String，后边是描述语句</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;1-App-Transport-Security-has-blocked-a-cleartext-HTTP-http-resource-load-since-it-is-insecure-Temporary-exceptions-can-be-configured
      
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
      <category term="错误整理" scheme="http://yoursite.com/tags/%E9%94%99%E8%AF%AF%E6%95%B4%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Python 中 MySQL 的相关操作</title>
    <link href="http://yoursite.com/2019/07/14/Python%20%E4%B8%AD%20MySQL%20%E7%9A%84%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2019/07/14/Python 中 MySQL 的相关操作/</id>
    <published>2019-07-14T11:47:47.000Z</published>
    <updated>2019-07-14T12:18:42.064Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Python-中-MySQL-的相关操作"><a href="#Python-中-MySQL-的相关操作" class="headerlink" title="Python 中 MySQL 的相关操作"></a>Python 中 MySQL 的相关操作</h3><h4 id="1、MySQL-安装"><a href="#1、MySQL-安装" class="headerlink" title="1、MySQL 安装"></a>1、MySQL 安装</h4><ul><li><p>1.1、下载 MySQL</p><p>​    官网：<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/</a> 选择对应版本下载即可</p></li><li><p>1.2、安装</p><p>​    安装步骤就不在这里赘述。</p></li></ul><h4 id="2、MySQL-数据库连接，并实现增删改查等操作"><a href="#2、MySQL-数据库连接，并实现增删改查等操作" class="headerlink" title="2、MySQL 数据库连接，并实现增删改查等操作"></a>2、MySQL 数据库连接，并实现增删改查等操作</h4><p>​    <em>注意：首先需要需要进行 import 操作</em></p><ul><li>2.1、创建表操作(数据库相同的表明只能创建一次，多次创建会报错)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建表的操作 </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_table</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 连接数据库     </span></span><br><span class="line">    db = pymysql.connect(host=<span class="string">'localhost'</span>,</span><br><span class="line">                         user=<span class="string">'root'</span>,</span><br><span class="line">                         password=<span class="string">'simplation'</span>,</span><br><span class="line">                         db=<span class="string">'test'</span></span><br><span class="line">                         )</span><br><span class="line">    sql = <span class="string">'''create table if not exists department (</span></span><br><span class="line"><span class="string">        id int NOT NULL AUTO_INCREMENT, </span></span><br><span class="line"><span class="string">                name text,              </span></span><br><span class="line"><span class="string">                sex text,              </span></span><br><span class="line"><span class="string">                salary float,              </span></span><br><span class="line"><span class="string">                PRIMARY KEY (`id`))'''</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 使用 cursor() 创建 cursor 对象</span></span><br><span class="line">    cursor = db.cursor()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 执行 sql 语句的操作        </span></span><br><span class="line">        cursor.execute(sql)</span><br><span class="line">        <span class="comment"># 提交数据库的操作         </span></span><br><span class="line">        db.commit()</span><br><span class="line">        print(<span class="string">'create db success.'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> BaseException <span class="keyword">as</span> e:</span><br><span class="line">        <span class="comment"># 如果发生意外，则进行回滚操作         </span></span><br><span class="line">        db.rollback()</span><br><span class="line">        print(e)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="comment"># 关闭游标和数据库         </span></span><br><span class="line">        cursor.close()</span><br><span class="line">        db.close()</span><br></pre></td></tr></table></figure><ul><li>2.2、添加数据库操作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 插入数据库的操作 </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insert_table</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 连接数据库     </span></span><br><span class="line">    db = pymysql.connect(host=<span class="string">'localhost'</span>,</span><br><span class="line">                         user=<span class="string">'root'</span>,</span><br><span class="line">                         password=<span class="string">'simplation'</span>,</span><br><span class="line">                         db=<span class="string">'test'</span>,</span><br><span class="line">                         charset=<span class="string">"utf8"</span>)</span><br><span class="line">    print(<span class="string">'数据库连接成功.'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># sql 语句     </span></span><br><span class="line">    sql = <span class="string">'insert into department (name, sex, salary) values(%s, %s, %s)'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使用 cursor() 创建 cursor 对象     </span></span><br><span class="line">    cursor = db.cursor()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 创建要插入的值         </span></span><br><span class="line">        values = (<span class="string">'Mr.Li'</span>, <span class="string">'男'</span>, <span class="number">9000</span>)</span><br><span class="line">        <span class="comment"># 执行 sql 语句         </span></span><br><span class="line">        cursor.execute(sql, values)</span><br><span class="line">        <span class="comment"># 提交数据库操作         </span></span><br><span class="line">        db.commit()</span><br><span class="line">        print(<span class="string">'insert db success.'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> BaseException <span class="keyword">as</span> e:</span><br><span class="line">        <span class="comment"># 出现意外则进行回滚操作         </span></span><br><span class="line">        db.rollback()</span><br><span class="line">        print(e)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="comment"># 关闭游标和数据库         </span></span><br><span class="line">        cursor.close()</span><br><span class="line">        db.close()</span><br></pre></td></tr></table></figure><ul><li>2.3、修改数据库操作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改数据库的操作</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_table</span><span class="params">()</span>:</span></span><br><span class="line">    db = pymysql.connect(host=<span class="string">'localhost'</span>,</span><br><span class="line">                         user=<span class="string">'root'</span>,</span><br><span class="line">                         password=<span class="string">'simplation'</span>,</span><br><span class="line">                         db=<span class="string">'test'</span>,</span><br><span class="line">                         charset=<span class="string">'utf8'</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'数据库连接成功.'</span>)</span><br><span class="line"></span><br><span class="line">    sql = <span class="string">'update department set name=%s, sex=%s, salary=%s where id = 2'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建 cursor 对象</span></span><br><span class="line"></span><br><span class="line">    cursor = db.cursor()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        values = (<span class="string">'John'</span>, <span class="string">'男'</span>, <span class="number">7500</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 执行 sql 语句</span></span><br><span class="line">        cursor.execute(sql, values)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 提交数据库操作</span></span><br><span class="line">        db.commit()</span><br><span class="line"></span><br><span class="line">        print(<span class="string">'update db success.'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> BaseException <span class="keyword">as</span> e:</span><br><span class="line">        <span class="comment"># 出现异常则进行回滚操作</span></span><br><span class="line">        db.rollback()</span><br><span class="line">        print(e)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="comment"># 关闭游标和数据库</span></span><br><span class="line">        cursor.close()</span><br><span class="line">        db.close()</span><br></pre></td></tr></table></figure><ul><li>2.4、查询数据库操作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询数据库的操作</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">query_table</span><span class="params">()</span>:</span></span><br><span class="line">    db = pymysql.connect(host=<span class="string">'localhost'</span>,</span><br><span class="line">                         user=<span class="string">'root'</span>,</span><br><span class="line">                         password=<span class="string">'simplation'</span>,</span><br><span class="line">                         db=<span class="string">'test'</span>,</span><br><span class="line">                         charset=<span class="string">'utf8'</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'连接数据库成功.'</span>)</span><br><span class="line"></span><br><span class="line">    sql = <span class="string">'select * from department'</span></span><br><span class="line"></span><br><span class="line">    cursor = db.cursor()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 执行 sql 语句</span></span><br><span class="line">        cursor.execute(sql)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 查询一条记录</span></span><br><span class="line">        result = cursor.fetchone()</span><br><span class="line"></span><br><span class="line">        print(<span class="string">'查询到的一条记录是: id=%s name=%s, sex=%s, salary=%d'</span> % (result[<span class="number">0</span>], result[<span class="number">1</span>], result[<span class="number">2</span>], result[<span class="number">3</span>]))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 如果先⽤ fetchone()，游标是从 1 开始</span></span><br><span class="line">        <span class="comment"># 重置游标位置，偏移量:⼤于0向后移动;⼩于0向前移动，mode默认是relative</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># relative:表示从当前所在的⾏开始移动; absolute:表示从第⼀⾏开始移动</span></span><br><span class="line">        cursor.scroll(<span class="number">0</span>, mode=<span class="string">'absolute'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 查询多条语句</span></span><br><span class="line">        results = cursor.fetchall()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> result <span class="keyword">in</span> results:</span><br><span class="line">            print(<span class="string">'查询到的记录是：id=%s, name=%s, sex=%s, salary=%s'</span> % (result[<span class="number">0</span>], result[<span class="number">1</span>], result[<span class="number">2</span>], result[<span class="number">3</span>]))</span><br><span class="line"></span><br><span class="line">        print(<span class="string">'query db success.'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span>  BaseException <span class="keyword">as</span> e:</span><br><span class="line">        <span class="comment"># 出现异常则进行回滚操作</span></span><br><span class="line">        db.rollback()</span><br><span class="line"></span><br><span class="line">        print(e)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="comment"># 关闭游标和数据库</span></span><br><span class="line">        cursor.close()</span><br><span class="line">        db.close()</span><br></pre></td></tr></table></figure><ul><li>2.5、删除数据库操作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除数据库的操作</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_table</span><span class="params">()</span>:</span></span><br><span class="line">    db = pymysql.connect(host=<span class="string">'localhost'</span>,</span><br><span class="line"></span><br><span class="line">                         user=<span class="string">'root'</span>,</span><br><span class="line"></span><br><span class="line">                         password=<span class="string">'simplation'</span>,</span><br><span class="line"></span><br><span class="line">                         db=<span class="string">'test'</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'db connect success.'</span>)</span><br><span class="line"></span><br><span class="line">    sql = <span class="string">'delete from department where id=%s'</span></span><br><span class="line"></span><br><span class="line">    cursor = db.cursor()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 执行 sql 语句</span></span><br><span class="line"></span><br><span class="line">        cursor.execute(sql, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">        db.commit()</span><br><span class="line">        print(<span class="string">'delete db success.'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> BaseException <span class="keyword">as</span> e:</span><br><span class="line">        <span class="comment"># 出现异常则进行回滚操作    </span></span><br><span class="line">        db.rollback()</span><br><span class="line">        print(e)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="comment"># 关闭游标和数据库</span></span><br><span class="line">        cursor.close()</span><br><span class="line">        db.close()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Python-中-MySQL-的相关操作&quot;&gt;&lt;a href=&quot;#Python-中-MySQL-的相关操作&quot; class=&quot;headerlink&quot; title=&quot;Python 中 MySQL 的相关操作&quot;&gt;&lt;/a&gt;Python 中 MySQL 的相关操作&lt;/h3&gt;&lt;
      
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="MySQL的相关操作" scheme="http://yoursite.com/tags/MySQL%E7%9A%84%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>Python 中标准数据类型</title>
    <link href="http://yoursite.com/2019/07/11/Python%20%E4%B8%AD%E6%A0%87%E5%87%86%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>http://yoursite.com/2019/07/11/Python 中标准数据类型/</id>
    <published>2019-07-11T13:25:01.000Z</published>
    <updated>2019-07-11T13:32:10.813Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Python-中标准数据类型"><a href="#Python-中标准数据类型" class="headerlink" title="Python 中标准数据类型"></a>Python 中标准数据类型</h3><h4 id="标准数据类型："><a href="#标准数据类型：" class="headerlink" title="标准数据类型："></a>标准数据类型：</h4><p>​    Number(数字)、String(字符串)、List(列表)、Tuple(元祖)、Dictionary(字典)、Sets(集合)</p><h5 id="Number-数字"><a href="#Number-数字" class="headerlink" title="Number(数字)"></a>Number(数字)</h5><ul><li>1.1、支持int(整数类型)、float(浮点型)、bool(布尔)、complex(复数)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="number">100</span>            <span class="comment"># 整数类型</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="number">10.0</span>           <span class="comment"># 浮点型</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c = <span class="literal">True</span>           <span class="comment"># 布尔</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a,b,c)       <span class="comment"># 打印结果：100 10.0 True</span></span><br><span class="line"></span><br><span class="line">复数由实数部分和虚数部分构成，可以使用a + bj,或者complex(a, b)表示，复数的是实部a和虚部b都是浮点型</span><br></pre></td></tr></table></figure><ul><li><p>1.2、数值运算</p><p>加(+)、减(-)、乘(<em>)、除(/)、取余(%)、乘方(*</em>)</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="number">30</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a + b)        <span class="comment"># 加     打印结果：50</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a - b)        <span class="comment"># 减     打印结果：-10</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a * b)        <span class="comment"># 乘     打印结果：600</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a / b)        <span class="comment"># 除     打印结果：.6666666666666666</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a % b)        <span class="comment"># 取余   打印结果：20</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a ** b)       <span class="comment"># 乘方   打印结果：1073741824000000000000000000000000000000</span></span><br><span class="line"></span><br><span class="line">注：除法(/)返回的都是浮点类型的数值，而除法 (//)返回的是整型</span><br></pre></td></tr></table></figure><h5 id="String-字符串"><a href="#String-字符串" class="headerlink" title="String(字符串)"></a>String(字符串)</h5><p>​    Python中的字符串使用’’(单引号)或者””(双引号)将字符串进行包裹起来，但是特殊字符需要使用转义字符()进行转义操作。</p><ul><li>2.1、常用操作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>string = <span class="string">'Hello， I \'m Simplation.'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(string)            <span class="comment"># 输出操作 返回 Hello， I 'm Simplation.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(len(string))       <span class="comment"># 打印结果：23</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(string[<span class="number">0</span>])         <span class="comment"># 打印结果：H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(string[<span class="number">0</span>, <span class="number">-1</span>])     <span class="comment"># 打印结果：Hello， I 'm Simplation</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(string[<span class="number">11</span>:<span class="number">22</span>])     <span class="comment"># 打印结果：Simplation </span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(string[<span class="number">11</span>:])       <span class="comment"># 打印结果：Simplation.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(string * <span class="number">2</span>)        <span class="comment"># 打印结果：Hello， I 'm Simplation.Hello， I 'm Simplation.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">'everyone '</span> + string) <span class="comment">#e打印结果：everyone Hello， I 'm Simplation.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">'Simplation'</span> <span class="keyword">in</span> string) <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(string.find(<span class="string">'Simplation'</span>))    <span class="comment"># 查找 返回字符串所在下标 12</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(string.index(<span class="string">'Sim'</span>))        <span class="comment"># 12</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(string.upper())     <span class="comment"># HELLO， I 'M SIMPLATION.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(string.lower())     <span class="comment"># hello， i 'm simplation.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">'Simplation'</span> <span class="keyword">in</span> string)    <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(string.capitalize())    <span class="comment"># Hello， i 'm simplation.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(string.isspace())    <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(string.replace(<span class="string">'Sim'</span>, <span class="string">' '</span>))    <span class="comment"># Hello， I 'm  plation.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(string.split(<span class="string">'m'</span>))    <span class="comment"># ["Hello， I '", ' Si', 'plation.']</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(string.strip())       <span class="comment"># 去掉字符串左右两边的空格 Hello， I 'm Simplation.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(string.rstrip())      <span class="comment"># 去掉字符串右边的空格 Hello， I 'm Simplation.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(string.lstrip())      <span class="comment"># 去掉字符串左边的空格Hello， I 'm Simplation.</span></span><br></pre></td></tr></table></figure><ul><li><p>2.2、占位符</p><p>常用占位符：%d表示那个位置是整数；%f表示那个位置是浮点数；%s表示那个位置是字符串</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">'Hello, %s'</span> %<span class="string">'Python’)    # Hello, Python</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; print('</span>Hello, %d%s%<span class="number">.2</span><span class="string">f' %(666, '</span>Python<span class="string">', 9.99))     # Hello, 666Python9.99</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">注: </span></span><br><span class="line"><span class="string">2.2.1、% 是转换开始的标志；</span></span><br><span class="line"><span class="string">2.2.2、如果不止一个占位符，要写在一个圆括号内，中间用逗号隔开；</span></span><br><span class="line"><span class="string">2.2.3、%.2f代表两位小数，不是两位后会四舍五入</span></span><br></pre></td></tr></table></figure><ul><li><p>2.3、字符串换行</p><p>2.3.1、三个单引号：Python中三个单引号允许一个字符串跨多行，字符串中也可以包括换行符、制表符以及其他的字符，</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="string">'''相思</span></span><br><span class="line"><span class="string">唐代：王维</span></span><br><span class="line"><span class="string">红豆生南国，春来发几枝。</span></span><br><span class="line"><span class="string">愿君多采撷，此物最相思。</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(s)</span><br><span class="line"></span><br><span class="line">相思</span><br><span class="line">唐代：王维</span><br><span class="line">红豆生南国，春来发几枝。</span><br><span class="line">愿君多采撷，此物最相思。</span><br></pre></td></tr></table></figure><p>  2.3.2、三个双引号</p><p>  2.3.3、\结尾</p><h5 id="List-列表"><a href="#List-列表" class="headerlink" title="List(列表)"></a>List(列表)</h5><p>​    列表是写在方括号[]中，元素用逗号,隔开,类标中的元素类型可以是不相同的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>L = [<span class="number">6</span>, <span class="number">9.9</span>, <span class="string">'Simplation'</span>, <span class="literal">True</span>, <span class="string">'I\'m Simplation'</span>]       <span class="comment"># 创建列表</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(L)           <span class="comment"># [6, 9.9, 'Simplation', True, "I'm Simplation"]</span></span><br></pre></td></tr></table></figure><ul><li>3.1、访问元素</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(L)        <span class="comment"># 打印列表，结果：[6, 9.9, 'Simplation', True, "I'm Simplation”]</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(len(L))   <span class="comment"># 打印列表的长度 结果：5</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(L[<span class="number">1</span>])     <span class="comment"># 打印列表的第一个元素 结果：9.9</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(L[<span class="number">2</span>:<span class="number">4</span>])   <span class="comment"># 输出列表的第二个和第三个元素 结果：['Simplation', True]</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(L[:<span class="number">4</span>])    <span class="comment"># 输出一个第0个到第三个元素   结果：[6, 9.9, 'Simplation', True]</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(L[<span class="number">-1</span>])    <span class="comment"># 输出最后一个元素    结果：I'm Simplation</span></span><br></pre></td></tr></table></figure><ul><li>3.2、添加元素</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>L1 = [<span class="literal">False</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(L + L1)    <span class="comment"># List 拼接</span></span><br><span class="line"></span><br><span class="line">[<span class="string">'1024'</span>, <span class="number">9.9</span>, <span class="string">'Simplation'</span>, <span class="literal">True</span>, <span class="string">"I'm Simplation"</span>, <span class="literal">False</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L.extend(L1)     <span class="comment"># 在List的末尾一次性增加一个元素</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(L)</span><br><span class="line"></span><br><span class="line">[<span class="string">'1024'</span>, <span class="number">9.9</span>, <span class="string">'Simplation'</span>, <span class="literal">True</span>, <span class="string">"I'm Simplation"</span>, <span class="literal">False</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L.extend(L1)     <span class="comment"># 每执行一次extend函数，就会在列表的最后一项添加一个元素</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(L)</span><br><span class="line"></span><br><span class="line">[<span class="string">'1024'</span>, <span class="number">9.9</span>, <span class="string">'Simplation'</span>, <span class="literal">True</span>, <span class="string">"I'm Simplation"</span>, <span class="literal">False</span>, <span class="literal">False</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L.append(<span class="string">'进行拼接测试’)    # append()方法拼接，在列表最后一项新增一个元素</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; print(L)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">['</span><span class="number">1024</span><span class="string">', 9.9, '</span>Simplation<span class="string">', True, "I'</span>m Simplation<span class="string">", False, False, '进行拼接测试’]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; L.insert(1, '不放假’)      # 在列表的某个位置插入元素 </span></span><br><span class="line"><span class="string">&gt;&gt;&gt; print(L)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">['1024', '不放假', 9.9, 'Simplation', True, "</span>I<span class="string">'m Simplation", False, False, '</span>进行拼接测试<span class="string">']</span></span><br></pre></td></tr></table></figure><ul><li>3.3、更新元素</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[<span class="number">0</span>] = <span class="string">'1024’           # 更新第0个元素的值为’1024’</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; print(L)                # 打印更新后的列表 ['</span><span class="number">1024</span><span class="string">', 9.9, '</span>Simplation<span class="string">', True, "I'</span>m Simplation<span class="string">"]</span></span><br></pre></td></tr></table></figure><ul><li>3.4、删除元素</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>L.pop()                <span class="comment"># pop ⽅法删除，可指定位置，默认最后⼀个</span></span><br><span class="line"><span class="string">"I'm Simplation”</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; L</span></span><br><span class="line"><span class="string">['1024', 9.9, 'Simplation', True]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; L.pop(0)               # pop 指定位置 、</span></span><br><span class="line"><span class="string">'1024'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; L</span></span><br><span class="line"><span class="string">[9.9, 'Simplation', True]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; del L[-1]              # 删除列表最后一个元素</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; L</span></span><br><span class="line"><span class="string">[9.9, 'Simplation’]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; L.remove(9.9)          # 移除列表中某个值的第⼀个匹配项，没有会抛异常</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; L</span></span><br><span class="line"><span class="string">['Simplation']</span></span><br></pre></td></tr></table></figure><ul><li>3.5、其他</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(L * <span class="number">2</span>)        <span class="comment"># 将列表的内容打印两次</span></span><br><span class="line">[<span class="string">'1024'</span>, <span class="number">9.9</span>, <span class="string">'Simplation'</span>, <span class="literal">True</span>, <span class="string">"I'm Simplation"</span>, <span class="string">'1024'</span>, <span class="number">9.9</span>, <span class="string">'Simplation'</span>, <span class="literal">True</span>, <span class="string">"I'm Simplation”]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; L.reverse()         # 反向列表中元</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; print(L)</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; L3 = L.copy()       # 复制  浅拷贝操作</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; print(L3)</span></span><br><span class="line"><span class="string">["</span>I<span class="string">'m Simplation", True, '</span>Simplation<span class="string">', 9.9, '</span><span class="number">1024</span>’]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L3.clear()          <span class="comment"># 清空列表</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L3</span><br><span class="line">[]</span><br></pre></td></tr></table></figure><h5 id="Tuple-元祖"><a href="#Tuple-元祖" class="headerlink" title="Tuple(元祖)"></a>Tuple(元祖)</h5><p>​    元组写在⼩括号 () ⾥，元素之间⽤逗号隔开，元组的元素不能修改，没有 append()，insert() 这样的⽅法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = (<span class="number">100</span>, <span class="number">100.0</span>, <span class="string">'Simplation'</span>, <span class="literal">True</span>, <span class="string">'I\'am Simpaltion.'</span>, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(s)</span><br><span class="line">(<span class="number">100</span>, <span class="number">100.0</span>, <span class="string">'Simplation'</span>, <span class="literal">True</span>, <span class="string">"I'am Simpaltion."</span>, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(s[<span class="number">0</span>])              <span class="comment"># 输出 list 第 1 个元素</span></span><br><span class="line"><span class="number">100</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(s[<span class="number">2</span>:<span class="number">5</span>])            <span class="comment"># 输出 lsit 下标从第 2 个到第 4个元素</span></span><br><span class="line">(<span class="string">'Simplation'</span>, <span class="literal">True</span>, <span class="string">"I'am Simpaltion.”)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; print(s[2:])             # 输出 lsit 下标从第 2 个起后⾯所有元素</span></span><br><span class="line"><span class="string">('Simplation', True, "</span>I<span class="string">'am Simpaltion.", [1, 2, 3])</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; s1 = (1, False)</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; print(s + s1)            # list 拼接</span></span><br><span class="line"><span class="string">(100, 100.0, '</span>Simplation<span class="string">', True, "I'</span>am Simpaltion.<span class="string">", [1, 2, 3], 1, False)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; print(s * 2)             # 打印两次</span></span><br><span class="line"><span class="string">(100, 100.0, 'Simplation', True, "</span>I<span class="string">'am Simpaltion.", [1, 2, 3], 100, 100.0, '</span>Simplation<span class="string">', True, "I'</span>am Simpaltion.<span class="string">", [1, 2, 3])</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; print(len(s))            # 输出 list ⻓度</span></span><br><span class="line"><span class="string">6</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">注：虽然元组元素不能修改，但能把 list 当特殊元素。</span></span><br></pre></td></tr></table></figure><h5 id="Dictionary-字典"><a href="#Dictionary-字典" class="headerlink" title="Dictionary(字典)"></a>Dictionary(字典)</h5><p>​    字典⽤ { } 标识或者 dict() ⽅法创建字典，它是⼀个⽆序的键 (key) : 值 (value) 对集合。键 (key) 必须 使⽤不可变类型。在同⼀个字典中，键 (key) 必须是唯⼀的（不唯⼀，取最后⼀个值，不建议这样 写）。{ } 是⽤来创建⼀个空字典。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dic</span> = &#123;<span class="string">'name'</span>:<span class="string">'Simplation'</span>, <span class="string">'site'</span>: <span class="string">'[http://www.baidu.com]'</span>, <span class="string">'code'</span>: <span class="number">1024</span>&#125;</span><br></pre></td></tr></table></figure><ul><li>5.1、访问元素</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(dic)                  <span class="comment"># 打印字典</span></span><br><span class="line">&#123;<span class="string">'name'</span>: <span class="string">'Simplation'</span>, <span class="string">'site'</span>: <span class="string">'[http://www.baidu.com]'</span>, <span class="string">'code'</span>: <span class="number">1024</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(dic[<span class="string">'site'</span>])          <span class="comment"># 输出键为 site 的值</span></span><br><span class="line">[http://www.baidu.com[http://www.baidu.com</span><br></pre></td></tr></table></figure><ul><li>5.2、修改元素</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic[<span class="string">'code'</span>] = <span class="number">520</span>               <span class="comment"># 修改元素 </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(dic[<span class="string">'code'</span>])              <span class="comment"># 打印：520</span></span><br><span class="line">&#123;<span class="string">'name'</span>: <span class="string">'Simplation'</span>, <span class="string">'site'</span>: <span class="string">'[http://www.baidu.com]'</span>, <span class="string">'code'</span>: <span class="number">520</span>&#125;</span><br></pre></td></tr></table></figure><ul><li>5.3、新增元素</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic[<span class="string">'id'</span>] = <span class="number">1314</span>                <span class="comment"># 新增元素</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic、</span><br><span class="line">&#123;<span class="string">'name'</span>: <span class="string">'Simplation'</span>, <span class="string">'site'</span>: <span class="string">'[http://www.baidu.com]'</span>, <span class="string">'code'</span>: <span class="number">520</span>, <span class="string">'id'</span>: <span class="number">1314</span>&#125;</span><br></pre></td></tr></table></figure><ul><li>5.4、删除元素</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic.pop(<span class="string">'code’)            # 删除 code 键</span></span><br><span class="line"><span class="string">1024</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; print(dic)</span></span><br><span class="line"><span class="string">&#123;'</span>name<span class="string">': '</span>Simplation<span class="string">', '</span>site<span class="string">': '</span>[http://www.baidu.com]’&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic.clear()                <span class="comment"># 清空字典</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic</span><br><span class="line">&#123;&#125;</span><br></pre></td></tr></table></figure><ul><li>5.5、其他</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dict() ⽅法创建字典 d = dict(id=1024, name</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = dict(id=<span class="number">1024</span>, name=<span class="string">'simplation'</span>, site=<span class="string">'[http://www.baidu.com/]'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(d)</span><br><span class="line">&#123;<span class="string">'id'</span>: <span class="number">1024</span>, <span class="string">'name'</span>: <span class="string">'simplation'</span>, <span class="string">'site'</span>: <span class="string">'[http://www.baidu.com/]'</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(d.copy())               <span class="comment"># 浅拷贝</span></span><br><span class="line">&#123;<span class="string">'id'</span>: <span class="number">1024</span>, <span class="string">'name'</span>: <span class="string">'simplation'</span>, <span class="string">'site'</span>: <span class="string">'[http://www.baidu.com/]'</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic.keys()                    <span class="comment"># 打印字典中的所有key值</span></span><br><span class="line">dict_keys([<span class="string">'name'</span>, <span class="string">'site'</span>, <span class="string">'code’])</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; dic.values()                  # 打印字典中所有value值</span></span><br><span class="line"><span class="string">dict_values(['</span>Simplation<span class="string">', '</span>[http://www.baidu.com]<span class="string">', 1024])</span></span><br></pre></td></tr></table></figure><h5 id="Sets-集合"><a href="#Sets-集合" class="headerlink" title="Sets(集合)"></a>Sets(集合)</h5><p>​    集合是⼀个⽆序不重复元素的序列，⽤⼤括号 { } 或者 set() 函数创建。创建⼀个空集合必须⽤ set()， 因为 { } 是⽤来创建⼀个空字典。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = &#123;<span class="string">'name'</span>, <span class="string">'site'</span>, <span class="string">'code'</span>, <span class="number">1</span>, <span class="number">1</span>&#125;    <span class="comment"># 创建集合</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(s)</span><br><span class="line">&#123;<span class="number">1</span>, <span class="string">'name'</span>, <span class="string">'site'</span>, <span class="string">'code'</span>&#125;</span><br></pre></td></tr></table></figure><h5 id="空值"><a href="#空值" class="headerlink" title="空值"></a>空值</h5><p>​    Python ⾥⼀个特殊的值，叫做空值，⽤ None 表示。</p><h5 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h5><p>​    Python中内置的bif可以进行数据间的类型转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">int(x)：将 x 转换为⼀个整数 </span><br><span class="line"></span><br><span class="line">float(x)：将 x 转换到⼀个浮点数 </span><br><span class="line"></span><br><span class="line">str(x)：将对象 x 转换为字符串 </span><br><span class="line"></span><br><span class="line">list(s)：将序列 s 转换为⼀个列表</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Python-中标准数据类型&quot;&gt;&lt;a href=&quot;#Python-中标准数据类型&quot; class=&quot;headerlink&quot; title=&quot;Python 中标准数据类型&quot;&gt;&lt;/a&gt;Python 中标准数据类型&lt;/h3&gt;&lt;h4 id=&quot;标准数据类型：&quot;&gt;&lt;a href=
      
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="基本数据类型" scheme="http://yoursite.com/tags/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>Chrome 常用插件汇总</title>
    <link href="http://yoursite.com/2019/07/01/Chrome%20%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E6%B1%87%E6%80%BB/"/>
    <id>http://yoursite.com/2019/07/01/Chrome 常用插件汇总/</id>
    <published>2019-07-01T14:24:04.000Z</published>
    <updated>2019-07-01T14:57:37.363Z</updated>
    
    <content type="html"><![CDATA[<p>自做 Android 以来，成为一名 Google 的死忠粉，Google 的软件产品几乎都用过，这篇主要记录一下 Chrome 的相关扩展程序，有了这些插件，你的 Chrome 绝对堪称神器。(要有取舍，当然这里忽略内存！！！)</p><ul><li><p>百度网盘助手</p><p><em>把网盘的下载地址导出到aria2/aria2-rpc，支持YAAW</em></p></li><li><p>Adblock Plus</p><p><em>免费广告拦截程序</em></p></li><li><p>Augmented Steam</p></li><li><p>ChroPath</p><p>生成和验证独特的选择器</p></li><li><p>Color by Fardos</p><p><em>从网站中选择颜色，保存颜色和渐变，获得匹配的色调和色调，并创建美丽的渐变</em></p></li><li><p>Dark Reader</p><p><em>黑色主题，适用于任何网站。关爱眼睛，就使用Dark Reader进行夜间和日间浏览</em></p></li><li><p>GayHub</p><p><em>github的一个很棒的扩展程序</em></p></li><li><p>Infinity 新标签页(Pro)</p><p><em>百万用户选择的新标签页和快速拨号，自由添加网站图标，云端高清壁纸，快速访问书签、天气、笔记、待办事项、扩展管理与历史记录</em></p></li><li><p>JavaScript and CSS Code Beautifier</p><p><em>打开 .css / .js / .json 文件时，可以美化 CSS，JavaScript 和 JSON 代码。</em></p></li><li><p>JSONView</p><p><em>验证、查看、并格式化 JSON 文档</em></p></li><li><p>Momentum</p><p><em>美化 Chrome 启动页，将新标签页替换为具有待办事项，天气和灵感的个人仪表板等。</em></p></li><li><p>Octotree</p><p><em>以树形结构显示 Github 仓库的代码，省去一级一级查找</em></p></li><li><p>Reggy</p><p><em>创建随机身份并在几秒钟内注册任何网站！ Reggy还包括一个内置的表格填充物</em></p></li><li><p>uBlock Origin</p><p><em>一款高效的网络请求过滤工具，占用极低的内存和 CPU。</em></p></li><li><p>Web Scraper</p><p><em>网站数据提取工具</em></p></li><li><p>书签侧边栏</p><p><em>在浏览器视图区左侧添加固定式的, 管理所有书签的侧边栏.</em></p></li><li><p>二管家</p><p><em>一个全能的拓展管理和用户脚本管理拓展</em></p></li><li><p>简悦 - SimpRead</p><p><em>让你瞬间进入沉浸式阅读的 Chrome 扩展，类似 Safari 的阅读模式。 包含 聚焦模式和阅读模式两种</em></p></li><li><p>谷歌访问助手</p><p><em>不用多说了吧</em></p></li><li><p>达达划词翻译</p><p><em>划词翻译、生词本、吐司弹词、与扇贝同步</em></p></li><li><p>Vysor<br><em>无需 root, 能够在 Chrome 里通过 USB 直接控制 Android 设备</em></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;自做 Android 以来，成为一名 Google 的死忠粉，Google 的软件产品几乎都用过，这篇主要记录一下 Chrome 的相关扩展程序，有了这些插件，你的 Chrome 绝对堪称神器。(要有取舍，当然这里忽略内存！！！)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;百度网盘助
      
    
    </summary>
    
      <category term="Chrome" scheme="http://yoursite.com/categories/Chrome/"/>
    
      <category term="Browser" scheme="http://yoursite.com/categories/Chrome/Browser/"/>
    
    
      <category term="Chrome Extension" scheme="http://yoursite.com/tags/Chrome-Extension/"/>
    
  </entry>
  
  <entry>
    <title>Android 中常见问题汇总(附解决办法)</title>
    <link href="http://yoursite.com/2019/06/04/Android%20%E4%B8%AD%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    <id>http://yoursite.com/2019/06/04/Android 中常见问题汇总/</id>
    <published>2019-06-04T11:47:04.000Z</published>
    <updated>2019-07-03T13:31:03.061Z</updated>
    
    <content type="html"><![CDATA[<p>本片博文主要介绍的是自己在日常工作中遇到的一些问题，在此统一做一个汇总，希望能后帮到大家。</p><ul><li>1.Android Studio 编译项目报错：The SourceSet ‘instrumentTest’ is not recognized by the Android Gradle Plugin.</li><li>2.导入Eclipse项目报错，Error:Could not determine the class-path for interface com.android.builder.model.AndroidProject.</li><li>3.使用Retrofit进行网络请求（post）的时候，log打印日志：java.lang.IllegalArgumentException: @FieldMap parameters can only be used with form encoding. (parameter #1)</li><li>4.查看SHAR1值的方法</li><li>5.Could not find com.android.tools.build:aapt2:3.2.1-4818971.</li><li>6.AAPT2 error: check logs for details</li><li>7.java.lang.UnsatisfiedLinkError: dlopen failed: library “/system/lib64/libweibosdkcore.so” needed or dlopened by “/system/lib64/libnativeloader.so” is not accessible for the namespace “classloader-namespace”</li><li>8.java.io.IOException: proguard.ParseException: Unexpected keyword ‘com.amap.api.mapcore.xx’</li><li>9.给项目添加 Android 10 的网络权限。</li><li>10.Android 中 String 资源文件添加空格/空白格</li><li>11.Android XListView 在刷新数据是越界问题。 </li><li>12.Didn’t find class “android.support.v4.content.FileProvider” on path:</li><li>13.AndroidStudio无法连接模拟器。</li><li>14.Android java.lang.RuntimeException: Parcelable encountered IOException writing serializable object </li><li>15.Android.os.TransactionTooLargeException 异常解决</li><li>16.java.lang.IllegalArgumentException: Both dimensions must be greater than 0 二维码扫描</li><li>17.Error:Execution failed for task ‘:包路径:mergeReleaseResources’.</li><li>18.Could not get unknown property ‘jnilibs’ for source set ‘main’ of type org.gradle.api.internal.tasks.DefaultSourceSet.</li><li>19.android N 调用相机错误提示: android.os.FileUriExposedException: file:///storage/emulated/0/picture1551231656.jpg exposed beyond app through Intent.getData()</li><li>20.The number of method references in a .dex file cannot exceed 64K.</li><li>21.Android Studio中references to other resources are not supported by build-time PNG generation解决方案</li><li>22.解决”No toolchains found in the NDK toolchains folder for ABI with prefix: </li><li>23.Annotation processors must be explicitly declared now.  The following dependencies on the compile classpath are found to contain annotation processor.  Please add them to the annotationProcessor configuration.  </li><li>24.java.util.concurrent.ExecutionException: com.android.builder.internal.aapt.v2.Aapt2Exception: Android resource compilation failed Output:  E:\working space\GaoxinSafetyEnter\appclient\build\intermediates\incremental\mergeDebugResources\merged.dir\values\values.xml:932: error: <item> inner element must either be a resource reference or empty.</item></li><li>25.Android TextView 显示后台返回的富文本内容</li><li>26.Android Activity 页面 Edittext 控件自动弹出软键盘的问题。（修改为使用时才弹出软键盘）</li><li>27.Could not find manifest-merger.jar (com.android.tools.build:manifest-merger:26.0.1).</li><li>28.布局报错：Error parsing XML: not well-formed (invalid token)</li><li>29.Android P 提示 java.io.IOException: Cleartext HTTP traffic to XXX not permitted</li><li>30.Android P Android java.lang.NoClassDefFoundError: Failed resolution of: Lorg/apache/commons/logging/LogFactory</li><li>31.java.lang.NoClassDefFoundError: Failed resolution of: Lokio/Buffer</li><li>32.java.lang.RuntimeException: Parcelable encountered IOException writing serializable object (name = com.example.app.moudle.CheckAgainstStandard$ListBean)</li><li>33.Android studio Could not download guava.jar</li><li>34.java.lang.IllegalArgumentException: timeout too large.</li><li>35.java.lang.SecurityException: Need to declare android.permission.REQUEST_INSTALL_PACKAGES to call this api</li></ul><hr><p><strong>1.Android Studio 编译项目报错：The SourceSet ‘instrumentTest’ is not recognized by the Android Gradle Plugin.</strong></p><p>解决办法：gradle 配置，这里的配置中 instrumentTest 已被弃用，不适用于现在的 gradle 版本。用 androidTest 替换 instrumentTest，编译运行即可。</p><p><strong>2.导入Eclipse 项目报错，Error:Could not determine the class-path for interface com.android.builder.model.AndroidProject.</strong></p><p>解决办法：修改自己本地安装的 gradle 版本号，然后重新编译执行。</p><p><strong>3.使用Retrofit进行网络请求（post）的时候，log打印日志：java.lang.IllegalArgumentException: @FieldMap parameters can only be used with form encoding. (parameter #1)</strong></p><p>解决办法：当POST请求时，@FormUrlEncoded和@Field简单的表单键值对。两个需要结合使用，否则会报错；@Query请求参数。无论是GET或POST的参数都可以用它来实现 </p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">正确写法：</span><br><span class="line"><span class="variable">@FormUrlEncoded</span></span><br><span class="line"><span class="variable">@POST</span>(forgetpwd)</span><br><span class="line">Observable&lt;ResponseBody&gt; forget(<span class="variable">@FieldMap</span> Map&lt;String, String&gt; map);</span><br></pre></td></tr></table></figure><p><strong>4.查看SHAR1值的办法。</strong></p><p>解决办法：<br>    (1).把apk的格式改为压缩文件，进行解压。<br>    (2).在解压出来的文件中获取META-INF文件夹下的CERT.RSA文件。<br>    (3).打开cmd Keytool –printcert –file 后面接文件的路径。 </p><p><strong>5.Could not find com.android.tools.build:aapt2:3.2.1-4818971.</strong></p><p>解决方法：在项目的build.gradle文件中，新增一行google()即可解决</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">allprojects </span>&#123;</span><br><span class="line"><span class="class">repositories </span>&#123;</span><br><span class="line">   jcenter()</span><br><span class="line">   google()<span class="comment">//新增这一行</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>6.AAPT2 error: check logs for details</strong></p><p>解决办法：构建 App 的时候，打开 Build 窗口，点击 “Toggle View” 切换到文本输出。查看log具体输出原因</p><p><strong>7.java.lang.UnsatisfiedLinkError: dlopen failed: library “/system/lib64/libweibosdkcore.so” needed or dlopened by “/system/lib64/libnativeloader.so” is not accessible for the namespace “classloader-namespace”</strong></p><p>解决办法：根据错误提示，缺少对应的so文件，需要ctrl+shift+n找到so，并拷贝到jniLibs文件夹下，注意对应的文件位置。重新rebuild即可。</p><p><strong>8.java.io.IOException: proguard.ParseException: Unexpected keyword ‘com.amap.api.mapcore.xx’</strong></p><p>解决办法：<br>    1.检查关键字是否错误，keep class 等<br>    2.检查包名是否拼写错误<br>    3.检查是否有中文字符，比如括号，点，空格，空格，空格</p><p><strong>9.给项目添加 Android 10 的网络权限。</strong><br>解决办法：<br>    1.将如下代码，添加到xml文件中     </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">network-security-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">base-config</span> <span class="attr">cleartextTrafficPermitted</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">network-security-config</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​     2.在application中引用xml文件即可。        </p><p><strong>10.Android 中 String 资源文件添加空格/空白格</strong><br>解决办法：Android 中字符串资源放置在 string.xml 文件中，并且该文件不能识别空格，但是在实际开发过程中需要用到空格，在需要设置的地方添加 &#160; 即可。</p><p>*<em>11.Android XListView 在刷新数据是越界问题：java.lang.IndexOutOfBoundsException: Invalid index 1, size is 1 。 *</em></p><p>解决办法：</p><p>​        1.不使用下拉刷新的headView, </p><p>​        2.当adapter的数据被全部clean时,使用adapter.notifyDataSetInvalidated(); </p><p>​        3.在加入新的数据后,使用adapter.notifyDataSetChanged(); </p><p><strong>12.Didn’t find class “android.support.v4.content.FileProvider” on path:</strong></p><p>解决办法：</p><p>​    1.添加如下代码</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">defaultConfig</span> &#123;</span><br><span class="line"><span class="attribute">multiDexEnabled</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    2.在Application中重写 attachBaseContext() 方法 并初始化 MultiDex.install(this);</p><p><strong>13.AndroidStudio无法连接模拟器。</strong></p><p>解决办法：</p><p>​    1.首先进入到 AndroidStudio 下的plateform-tools目录下</p><p>​    2.执行 adb connect 127.0.0.1：62001</p><p>​    3.出现 connected to 127.0.0.1:62001 则表示连接成功</p><p>*<em>14.Android java.lang.RuntimeException: Parcelable encountered IOException writing serializable object *</em></p><p>解决办法：</p><p>​    1.抛出java.io.NotSerializableException异常,抛出这个异常是因为你的对象没有实现Serializable接口，只要实现该接口就好了。</p><p>​    2.抛出java.lang.RuntimeException异常,抛出这个异常是因为传递的对象里面的对象也要实现Serializable接口。</p><p><strong>15.Android.os.TransactionTooLargeException 异常解决</strong></p><p>解决办法：Android 中进程中通过 binder 是通讯的数据载体，当序列化数据过大时，会出现该异常。</p><p>​    1.可以通过 EventBus 等替代方案来解决。</p><p>​    2.使用 getIntent().getSerializableExtra() 传递数据，数据量不宜过大。</p><p><strong>16.java.lang.IllegalArgumentException: Both dimensions must be greater than 0 二维码扫描</strong></p><p>解决办法：需要将 ZXApplication 添加到配置清单文件中</p><p><strong>17.Error:Execution failed for task ‘:包路径:mergeReleaseResources’.</strong></p><p>解决办法：本地包路径\src\main\res\values\attrs.xml: Error: Found item Attr/textColor more than one time</p><p>根据错误信息描述可以推测出 textColor 属性被多次声明, 可以去掉多余的或者是无用的信息.</p><p><strong>18.Could not get unknown property ‘jnilibs’ for source set ‘main’ of type org.gradle.api.internal.tasks.DefaultSourceSet.</strong></p><p>解决办法：jnilibs需要更改为：jniLibs， 添加如下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sourceSets&#123;</span><br><span class="line">    main&#123;</span><br><span class="line">        jniLibs.srcDirs=[<span class="string">'libs'</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>19.android N 调用相机错误提示: android.os.FileUriExposedException: file:///storage/emulated/0/picture1551231656.jpg exposed beyond app through Intent.getData()</strong></p><p>解决办法：</p><p>​    1.调用相机 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 启动拍照,并保存到临时文件</span></span><br><span class="line">Intent mIntent = <span class="keyword">new</span> Intent();</span><br><span class="line">mIntent.setAction(MediaStore.ACTION_IMAGE_CAPTURE);</span><br><span class="line"><span class="keyword">int</span> currentVersion = Build.VERSION.SDK_INT;</span><br><span class="line"><span class="keyword">if</span> (currentVersion &lt; <span class="number">24</span>) &#123;</span><br><span class="line">    mIntent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(mPictureFile));</span><br><span class="line">    startActivityForResult(mIntent, REQUEST_CAMERA_IMAGE);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    ContentValues contentValues = <span class="keyword">new</span> ContentValues(<span class="number">1</span>);</span><br><span class="line">    contentValues.put(MediaStore.Images.Media.DATA, mPictureFile.getAbsolutePath());</span><br><span class="line">    Uri uri = getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,contentValues);</span><br><span class="line">    mIntent.putExtra(MediaStore.EXTRA_OUTPUT, uri);</span><br><span class="line">    startActivityForResult(mIntent, REQUEST_CAMERA_IMAGE);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    2.获取图片</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fileSrc = mPictureFile.getAbsolutePath();</span><br><span class="line">updateGallery(fileSrc);</span><br><span class="line">File file = <span class="keyword">new</span> File(fileSrc);</span><br><span class="line">Uri uri = FileProvider.getUriForFile(<span class="keyword">this</span>, getPackageName() + <span class="string">".provider"</span>, file);</span><br><span class="line">FaceUtil.cropPicture(<span class="keyword">this</span>, uri);</span><br></pre></td></tr></table></figure><p><strong>20.The number of method references in a .dex file cannot exceed 64K.</strong></p><p>解决办法：</p><p>​    1.在 dependencies 中添加如下代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">'com.android.support:multidex:1.0.1'</span></span><br></pre></td></tr></table></figure><p>​    2.在 defaultConfig 中添加如下代码</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">multiDexEnabled <span class="keyword">true</span></span><br></pre></td></tr></table></figure><p>​    3.在 AndroidManifest.xml 中的 application 标签中添加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">android:name=<span class="string">"android.support.multidex.MultiDexApplication"</span>&gt;</span><br><span class="line">android:name=<span class="string">"com.xxxx.xxxx.YourApplication"</span>&gt;</span><br></pre></td></tr></table></figure><p>​    4.如果你的应用程序继承 Application , 那么你需要重写Application attachBaseContext方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">attachBaseContext</span><span class="params">(Context base)</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">super</span>.attachBaseContext(base);   </span><br><span class="line">    MultiDex.install(<span class="keyword">this</span>) ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>21.Android Studio中references to other resources are not supported by build-time PNG generation解决方案</strong></p><p>解决办法：在 build.gradle 文件中添加以下代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">defaultConfig &#123;</span><br><span class="line">    vectorDrawables.useSupportLibrary = <span class="keyword">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>22.解决”No toolchains found in the NDK toolchains folder for ABI with prefix: mips64el-linux-android”错误</strong></p><p>解决办法：NDK的更新记录里有下边一段话:This version of the NDK is incompatible with the Android Gradle plugin<br>       version 3.0 or older. If you see an error like<br>       <figure class="highlight plain"><figcaption><span>toolchains found in the NDK toolchains folder for ABI with prefix: mips64el-linux-android,```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">       update your project file to [use plugin version 3.1 or newer]. You will also</span><br><span class="line">       need to upgrade to Android Studio 3.1 or newer.</span><br><span class="line"></span><br><span class="line">新版本的NDK与3.0及以前旧版的Android Gradle plugin插件不兼容</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">dependencies &#123;</span><br><span class="line">    classpath &apos;com.android.tools.build:gradle:3.2.0&apos;   // 修改为你拥有的版本号即可</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>*<em>23.Annotation processors must be explicitly declared now.  The following dependencies on the compile classpath are found to contain annotation processor.  Please add them to the annotationProcessor configuration.  *</em></p><p>解决办法：在项目的 build.gradle 文件中的 android 下的 defaultConfig 中添加如下代码，然后重新编译即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javaCompileOptions.annotationProcessorOptions.includeCompileClasspath = <span class="keyword">true</span></span><br></pre></td></tr></table></figure><p><strong>24.java.util.concurrent.ExecutionException: com.android.builder.internal.aapt.v2.Aapt2Exception: Android resource compilation failed Output:  E:\working space\GaoxinSafetyEnter\appclient\build\intermediates\incremental\mergeDebugResources\merged.dir\values\values.xml:932: error: <item> inner element must either be a resource reference or empty.</item></strong></p><p>解决办法：找到报错的目标文件的具体位置，打开全局搜索(Ctrl + Shift + F)   Scope  查找资源文件的名称，然后修改即可。</p><p><strong>25.Android TextView 显示后台返回的富文本内容</strong></p><p>解决办法：使用 Html.fromHtml() </p><p>​    1.定义富文本内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String content = <span class="string">"&lt;p style=\"padding: 0px; margin: 0px; color: rgb(43, 43, 43); font-family: 微软雅黑, 宋体, serif; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-style: initial; text-decoration-color: initial; text-indent: 2em;\"&gt;国家安全生产监督管理总局令&lt;\/p&gt;"</span></span><br></pre></td></tr></table></figure><p>​    2.使用 Html.fromHtml()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CharSequence charSequence = Html.fromHtml(content);</span><br><span class="line">contentTxt.setText(<span class="string">"内容:"</span> + charSequence);</span><br><span class="line">contentTxt.setMovementMethod(LinkMovementMethod.getInstance());</span><br></pre></td></tr></table></figure><p><strong>26.Android Activity 页面 Edittext 控件自动弹出软键盘的问题。（修改为使用时才弹出软键盘）</strong></p><p>解决办法：</p><p>​    1.在Edittext 控件上添加如下两个属性</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">android:focusable=<span class="string">"true"</span></span><br><span class="line">android:focusableInTouchMode=<span class="string">"true"</span></span><br></pre></td></tr></table></figure><p>​    2.在配置清单文件中找到对应的 Activity 页面, 添加如下属性即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android:windowSoftInputMode=<span class="string">"adjustResize|stateHidden"</span></span><br></pre></td></tr></table></figure><p><strong>27.Could not find manifest-merger.jar (com.android.tools.build:manifest-merger:26.0.1).</strong></p><p>解决办法：将 google() 和 jcenter() 换下位置，让它去 google 中下载 manifest-merger.jar 包，就可以编译通过.</p><p><strong>28.布局报错：Error parsing XML: not well-formed (invalid token)</strong></p><p>解决办法：首先确定布局文件编码是否为 utf-8 格式，其次是 xml 文件中不能出现 ‘&lt;’ ‘&gt;’ 等符号, 建议在代码中赋值.</p><p><strong>29.Android P 提示 java.io.IOException: Cleartext HTTP traffic to XXX not permitted</strong></p><p>解决办法：Android P的系统上面默认所有Http的请求都被阻止了。通过在AnroidManifestz.xml中的application显示设置：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;application android:<span class="attribute">usesCleartextTraffic</span>=<span class="string">"true"</span>&gt;</span><br></pre></td></tr></table></figure><p><strong>30.Android P Android java.lang.NoClassDefFoundError: Failed resolution of: Lorg/apache/commons/logging/LogFactory</strong></p><p>解决办法：</p><p>​    1.添加 commons-logging-4.0.6 jar 到 libs 文件夹下并引用。</p><p>​    2.在AnroidManifest.xml中的application显示设置：<application android:usescleartexttraffic="true"></application></p><p><strong>31.java.lang.NoClassDefFoundError: Failed resolution of: Lokio/Buffer</strong></p><p>解决办法：缺少 Okio 的 Libs，添加进项目即可。 链接地址:https：//github.com/square/okio</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implementation <span class="string">' com.squareup.okio：okio：2.2.2 '</span></span><br></pre></td></tr></table></figure><p><strong>32.java.lang.RuntimeException: Parcelable encountered IOException writing serializable object (name = com.example.app.moudle.CheckAgainstStandard$ListBean)</strong></p><p>解决办法：该实体类中存在部分类没有实现 serializable 接口，仔细检查，让所有的类都实现 serializable 接口即可。</p><p><strong>33.Android studio Could not download guava.jar</strong></p><p>解决办法：项目中没有用到 guava.jar 的相关东西，删除 .gradle 和 .idea 两个文件夹，重新 rebuild 即可。</p><p><strong>34.java.lang.IllegalArgumentException: timeout too large.</strong></p><p>解决办法：网络请求中超时时间过长导致的，一般情况下超时时间设置为 5s 就可以了。</p><p><strong>35.java.lang.SecurityException: Need to declare android.permission.REQUEST_INSTALL_PACKAGES to call this api</strong></p><p>解决办法：配置清单文件中缺少 REQUEST_INSTALL_PACKAGES 权限，添加即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本片博文主要介绍的是自己在日常工作中遇到的一些问题，在此统一做一个汇总，希望能后帮到大家。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.Android Studio 编译项目报错：The SourceSet ‘instrumentTest’ is not recognized by th
      
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
      <category term="Android问题" scheme="http://yoursite.com/tags/Android%E9%97%AE%E9%A2%98/"/>
    
      <category term="汇总" scheme="http://yoursite.com/tags/%E6%B1%87%E6%80%BB/"/>
    
  </entry>
  
  <entry>
    <title>关于 HEXO 的一些常用命令</title>
    <link href="http://yoursite.com/2019/05/28/%E5%85%B3%E4%BA%8E%20hexo%20%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2019/05/28/关于 hexo 的常用命令/</id>
    <published>2019-05-28T13:26:08.114Z</published>
    <updated>2019-06-28T14:00:48.797Z</updated>
    
    <content type="html"><![CDATA[<p>由于电脑系统重装，之前的内容没有备份, 从2017年到2019年的内容靠自己之前整理的一些笔记还原了部分文章。不过目前已经重新将架子搭起来，准备继续搞起来！！！<br>欢迎来到[Hexo]（<a href="https://hexo.io/）！" target="_blank" rel="noopener">https://hexo.io/）！</a> 这是你的第一篇文章。 有关详细信息，请查看[文档]（<a href="https://hexo.io/docs/）。" target="_blank" rel="noopener">https://hexo.io/docs/）。</a> 如果您在使用Hexo时遇到任何问题，可以在[故障排除]（<a href="https://hexo.io/docs/troubleshooting.html）中找到答案，或者您可以在[GitHub]（https://github.com）上找到我。/" target="_blank" rel="noopener">https://hexo.io/docs/troubleshooting.html）中找到答案，或者您可以在[GitHub]（https://github.com）上找到我。/</a> hexojs/ HEXO/问题）。</p><p>＃＃ 快速开始</p><p>###创建一个新帖子</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new“我的新帖子”</span><br></pre></td></tr></table></figure><p>更多信息：[写作]（<a href="https://hexo.io/docs/writing.html）" target="_blank" rel="noopener">https://hexo.io/docs/writing.html）</a></p><p>###运行服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo服务器</span><br></pre></td></tr></table></figure><p>更多信息：[服务器]（<a href="https://hexo.io/docs/server.html）" target="_blank" rel="noopener">https://hexo.io/docs/server.html）</a></p><p>###生成静态文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo生成</span><br></pre></td></tr></table></figure><p>更多信息：[Generating]（<a href="https://hexo.io/docs/generating.html）" target="_blank" rel="noopener">https://hexo.io/docs/generating.html）</a></p><p>###部署到远程站点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>更多信息：[部署]（<a href="https://hexo.io/docs/deployment.html）" target="_blank" rel="noopener">https://hexo.io/docs/deployment.html）</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;由于电脑系统重装，之前的内容没有备份, 从2017年到2019年的内容靠自己之前整理的一些笔记还原了部分文章。不过目前已经重新将架子搭起来，准备继续搞起来！！！&lt;br&gt;欢迎来到[Hexo]（&lt;a href=&quot;https://hexo.io/）！&quot; target=&quot;_blan
      
    
    </summary>
    
      <category term="HEXO 的常用命令" scheme="http://yoursite.com/categories/HEXO-%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="hexo 的操作" scheme="http://yoursite.com/tags/hexo-%E7%9A%84%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>Python 第三方包管理工具-Pip</title>
    <link href="http://yoursite.com/2018/05/28/Python%20%E7%AC%AC%E4%B8%89%E6%96%B9%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-Pip/"/>
    <id>http://yoursite.com/2018/05/28/Python 第三方包管理工具-Pip/</id>
    <published>2018-05-28T01:41:04.000Z</published>
    <updated>2019-06-28T14:10:42.668Z</updated>
    
    <content type="html"><![CDATA[<p>Pip 是Python 推荐的用于安装Python软件包的工具。首先简单说明一下  Pip 的用法。</p><ul><li>1.安装包管理工具</li><li>2.升级包管理工具</li><li>3.安装第三方的模块</li><li>4.卸载第三方的模块</li></ul><p>1、安装包管理工具 - pip        </p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo easy-<span class="keyword">install</span> pip</span><br></pre></td></tr></table></figure><p>2、升级包管理工具的版本</p><p>​    Linux 或 Mac OS 上：</p><pre><code>pip install -U pip</code></pre><p>​    Windows 上：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip <span class="keyword">install</span> -U pip</span><br></pre></td></tr></table></figure><p>3、使用包管理工具安装第三方的模块</p><p>​    举个简单的栗子，使用命令：pip3 install + 模块名。例如安装 PyMySQL 模块，则需要使用命令：</p><pre><code>pip3 install PyMySQL</code></pre><p><img src="/images/%E6%BC%94%E7%A4%BA%E5%AE%89%E8%A3%85PyMySQL.png" alt="演示安装PyMySQL"></p><p>4、使用包管理工具卸载模块</p><p>使用卸载模块命令即可对相应模块进行移除操作，命令：pip uninstall + 模块名。</p><p><img src="/images/%E5%8D%B8%E8%BD%BD%E6%A8%A1%E5%9D%97.png" alt="卸载模块"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Pip 是Python 推荐的用于安装Python软件包的工具。首先简单说明一下  Pip 的用法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.安装包管理工具&lt;/li&gt;
&lt;li&gt;2.升级包管理工具&lt;/li&gt;
&lt;li&gt;3.安装第三方的模块&lt;/li&gt;
&lt;li&gt;4.卸载第三方的模块&lt;/li&gt;
      
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Pip" scheme="http://yoursite.com/tags/Pip/"/>
    
      <category term="包管理工具" scheme="http://yoursite.com/tags/%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>CantuseSubversioncommandlineclient 的解决方案</title>
    <link href="http://yoursite.com/2018/05/08/CantuseSubversioncommandlineclient%20%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://yoursite.com/2018/05/08/CantuseSubversioncommandlineclient 的解决方案/</id>
    <published>2018-05-08T09:36:21.000Z</published>
    <updated>2019-07-15T14:26:32.509Z</updated>
    
    <content type="html"><![CDATA[<p>由于项目在 iPhone X 上出现异常，要对 Xcode 进行9.3版本的更新时，发现也需要对 Mac OS 升级为 10.13.4，不然会出现不兼容的情况，谁叫人家是大哥呢？ 作为一名程序猿，不升级怎么修复 Bug？！</p><p>经过漫长的等待，终于更新好了，咦，Finder 怎么编成“访达”，当然还有其他的一些变化，这是 Apple 在汉语化的结果。真是受不了这翻译，果断切换为英文版。好了废话不多说，当我兴冲冲的打开 Xcode，准备提交更改的代码时候，直接弹出 <strong>Can’t use Subversion command line client: svn Probably the path to Subversion executable is wrong. Fix it. 错误。</strong></p><p>当出现这个问题的时候，不管你的Mac上边安装的什么IDE，提交SVN的时候都会报 <em><del>Can’t use Subversion command line client: svn Probably the path to Subversion executable is wrong. Fix it. 错误。</del></em>下边我贴出的Android Studio的错误信息。</p><p><img src="/.com//E:%5CHEXO%5Cthemes%5Cnext%5Csource%5Cimages%5CAndroidStudio%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF.jpg" alt="Android Studio 错误信息"></p><p>首先来说一下 Windows 下的解决方法：Windows 下的这个错误比较容易解决，重新安装一下SVN，勾选一下 Command line client tools 这个选项，最后在IDE中设置一下 SVN 的相关路径即可。作为一个 Mac 新手，这个问题还是比较棘手，从错误信息来看，是缺少相关的工具。</p><p><strong>解决办法：</strong></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">打开 Terminal 输入 xcode-<span class="keyword">select</span> <span class="comment">--install ,大概等待2分钟左右安装 Xcode 插件。等待安装完成之后，你就可以开心的提交代码。</span></span><br><span class="line"></span><br><span class="line">xcode-<span class="keyword">select</span> <span class="comment">--install</span></span><br></pre></td></tr></table></figure><p><img src="/.com//E:%5CHEXO%5Cthemes%5Cnext%5Csource%5Cimages%5C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.png" alt="解决办法"></p><p>在此记录一下遇到的问题，希望给遇到同样问题的小伙伴一点参考。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;由于项目在 iPhone X 上出现异常，要对 Xcode 进行9.3版本的更新时，发现也需要对 Mac OS 升级为 10.13.4，不然会出现不兼容的情况，谁叫人家是大哥呢？ 作为一名程序猿，不升级怎么修复 Bug？！&lt;/p&gt;
&lt;p&gt;经过漫长的等待，终于更新好了，咦，F
      
    
    </summary>
    
      <category term="CantuseSubversioncommandlineclient" scheme="http://yoursite.com/categories/CantuseSubversioncommandlineclient/"/>
    
    
      <category term="Xcode" scheme="http://yoursite.com/tags/Xcode/"/>
    
      <category term="Mac" scheme="http://yoursite.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发者协议更新的错误解决方法</title>
    <link href="http://yoursite.com/2018/04/22/iOS%20%E5%BC%80%E5%8F%91%E8%80%85%E5%8D%8F%E8%AE%AE%E6%9B%B4%E6%96%B0%E7%9A%84%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2018/04/22/iOS 开发者协议更新的错误解决方法/</id>
    <published>2018-04-22T04:42:43.000Z</published>
    <updated>2019-07-16T12:16:22.848Z</updated>
    
    <content type="html"><![CDATA[<p>由于很久没有登陆苹果开发者账号，要不是需要更新App的版本，苹果开发者协议更新导致开发者账号不能正常使用的问题就会遗漏，既然问题来了，那就想办法解决一下喽。</p><p>首先贴出错误信息，如下图所示</p><p><img src="/.com//E:%5CHEXO%5Cthemes%5Cnext%5Csource%5Cimages%5C%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF.jpg" alt="异常信息"></p><p>按照以往的方式直接点击右上角的 Review Agreement，然后同意开发许可协议就可以解决问题，但这次似乎有点不同，提示需要编辑电话，既然不一样，那就直接看错误信息。根据错误信息提示：开发者协议已经更新，你必须接受开发者许可协议，首先你需要更新 Apple ID 的联系方式。</p><p><strong>解决办法：</strong></p><p>点击 applied.apple.com 链接进入联系方式修改，修改的时候需要提供短信验证码，填写完成后，在返回错误信息页面，直接刷新网页，就会出现如下页面。到这里就跟之前的解决方法是一样的，点击同意开发许可协议，然后点击完成就 OK。</p><p><img src="/.com//E:%5CHEXO%5Cthemes%5Cnext%5Csource%5Cimages%5C%E5%90%8C%E6%84%8F%E8%AE%B8%E5%8F%AF%E5%8D%8F%E8%AE%AE.jpg" alt="同意许可协议"></p><p>在此记录一下遇到的问题，希望给遇到同样问题的小伙伴一点参考。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;由于很久没有登陆苹果开发者账号，要不是需要更新App的版本，苹果开发者协议更新导致开发者账号不能正常使用的问题就会遗漏，既然问题来了，那就想办法解决一下喽。&lt;/p&gt;
&lt;p&gt;首先贴出错误信息，如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/.com//E:%5CHEXO%5C
      
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
      <category term="开发者许可协议更新" scheme="http://yoursite.com/tags/%E5%BC%80%E5%8F%91%E8%80%85%E8%AE%B8%E5%8F%AF%E5%8D%8F%E8%AE%AE%E6%9B%B4%E6%96%B0/"/>
    
  </entry>
  
  <entry>
    <title>Python 中字符串的相关用法</title>
    <link href="http://yoursite.com/2018/04/02/Python%20%E4%B8%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E7%9B%B8%E5%85%B3%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2018/04/02/Python 中字符串的相关用法/</id>
    <published>2018-04-02T06:31:41.000Z</published>
    <updated>2019-06-28T14:09:27.682Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章主要记录一下Python中关于字符串的相关操作，一来是为了自己加深记忆，二来是方便后期查找起来比较快速。</p><ul><li><p>1、拼接字符串</p></li><li><p>2、字符串复制</p></li><li><p>3、字符串长度</p></li><li><p>4、字符串大小写转换(如果不进行重新赋值操作，原数据是不会发生变化的)</p></li><li><p>5、给字符串编号(从左到右是是从0开始)</p></li><li><p>6、字符串截取 </p></li><li><p>7、去掉字符串的空格</p></li></ul><h4 id="1、拼接字符串"><a href="#1、拼接字符串" class="headerlink" title="1、拼接字符串"></a>1、拼接字符串</h4><h5 id="1-1、使用-来拼接，只能操作相同类型"><a href="#1-1、使用-来拼接，只能操作相同类型" class="headerlink" title="1.1、使用 + 来拼接，只能操作相同类型"></a>1.1、使用 + 来拼接，只能操作相同类型</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">"正在学习"</span></span><br><span class="line">b = <span class="string">"Python"</span></span><br><span class="line">c = a + b</span><br><span class="line"></span><br><span class="line">print(c)    <span class="comment"># 正在学习Python</span></span><br></pre></td></tr></table></figure><h5 id="1-2、使用占位符来拼接字符串"><a href="#1-2、使用占位符来拼接字符串" class="headerlink" title="1.2、使用占位符来拼接字符串"></a>1.2、使用占位符来拼接字符串</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'Py'</span></span><br><span class="line">b = <span class="string">'thon'</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'%s%s'</span> % (a, b))    <span class="comment"># Python</span></span><br></pre></td></tr></table></figure><h4 id="2、字符串复制"><a href="#2、字符串复制" class="headerlink" title="2、字符串复制"></a>2、字符串复制</h4><h5 id="2-1、使用等号进行字符串的复制"><a href="#2-1、使用等号进行字符串的复制" class="headerlink" title="2.1、使用等号进行字符串的复制"></a>2.1、使用等号进行字符串的复制</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'copy string...'</span></span><br><span class="line">print(a)        <span class="comment"># result:copystring...</span></span><br><span class="line"></span><br><span class="line">b = a</span><br><span class="line">print(b)        <span class="comment"># result:copy string...</span></span><br></pre></td></tr></table></figure><h4 id="3、字符串长度"><a href="#3、字符串长度" class="headerlink" title="3、字符串长度"></a>3、字符串长度</h4><h5 id="使用len-函数获取字符串的长度"><a href="#使用len-函数获取字符串的长度" class="headerlink" title="使用len()函数获取字符串的长度"></a>使用len()函数获取字符串的长度</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A = <span class="string">'copy string...'</span></span><br><span class="line"></span><br><span class="line">print(A)        <span class="comment"># result:copy string...</span></span><br><span class="line">print(len(A))   <span class="comment"># result:14</span></span><br></pre></td></tr></table></figure><h4 id="4、字符串大小写转换-如果不进行重新赋值操作，原数据是不会发生变化的"><a href="#4、字符串大小写转换-如果不进行重新赋值操作，原数据是不会发生变化的" class="headerlink" title="4、字符串大小写转换(如果不进行重新赋值操作，原数据是不会发生变化的)"></a>4、字符串大小写转换(如果不进行重新赋值操作，原数据是不会发生变化的)</h4><h5 id="4-1、将小写转换成大写"><a href="#4-1、将小写转换成大写" class="headerlink" title="4.1、将小写转换成大写"></a>4.1、将小写转换成大写</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'copy, python'</span></span><br><span class="line">a.upper()  <span class="comment"># 将小写完全变成大写</span></span><br><span class="line">print(a)   <span class="comment"># result:'COPY, PYTHON'</span></span><br><span class="line">print(a)   <span class="comment"># result:'copy, python'  # 原数据没有改变</span></span><br><span class="line"></span><br><span class="line">b = a.upper()  <span class="comment"># 进行重新赋值，就会发生变化</span></span><br><span class="line">print(b)   <span class="comment"># result:'COPY, PYTHON'</span></span><br></pre></td></tr></table></figure><h5 id="4-2、将大写转换成小写"><a href="#4-2、将大写转换成小写" class="headerlink" title="4.2、将大写转换成小写"></a>4.2、将大写转换成小写</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c = b.lower()</span><br><span class="line">print(c)   <span class="comment"># result:'copy, python'</span></span><br></pre></td></tr></table></figure><h5 id="4-3、只改变首字符的大小写"><a href="#4-3、只改变首字符的大小写" class="headerlink" title="4.3、只改变首字符的大小写"></a>4.3、只改变首字符的大小写</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">print(a)   <span class="comment"># result:'copy, python'</span></span><br><span class="line"></span><br><span class="line">a.capitalize()  <span class="comment"># 改变首字母为大写</span></span><br><span class="line">print(a)   <span class="comment"># result:'Copy, python'</span></span><br><span class="line">print(a)   <span class="comment"># result:'copy, python'</span></span><br><span class="line"></span><br><span class="line">b = a.capitalize()</span><br><span class="line">print(a)   <span class="comment"># result:'Copy, python'</span></span><br><span class="line">print(b)   <span class="comment"># result:'copy, python'</span></span><br></pre></td></tr></table></figure><h4 id="4-4、判断首字母是否是大写-不含有逗号，且首字母大写的情况才是正确"><a href="#4-4、判断首字母是否是大写-不含有逗号，且首字母大写的情况才是正确" class="headerlink" title="4.4、判断首字母是否是大写(不含有逗号，且首字母大写的情况才是正确)"></a>4.4、判断首字母是否是大写(不含有逗号，且首字母大写的情况才是正确)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'Hello, python'</span>  <span class="comment"># 含有逗号的情况,直接返回 False。第一个是大写，第二个是小写</span></span><br><span class="line">print(a.istitle())   <span class="comment"># result:False</span></span><br><span class="line"></span><br><span class="line">a = <span class="string">'Hello, Python'</span></span><br><span class="line">print(a.istitle())   <span class="comment"># result:True</span></span><br><span class="line"></span><br><span class="line">a = <span class="string">'HelloPython'</span></span><br><span class="line">print(a.istitle())   <span class="comment"># result:True</span></span><br></pre></td></tr></table></figure><h5 id="4-5、判断字符串是否都是大写"><a href="#4-5、判断字符串是否都是大写" class="headerlink" title="4.5、判断字符串是否都是大写"></a>4.5、判断字符串是否都是大写</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'HelloPython'</span></span><br><span class="line">print(a.isupper())   <span class="comment"># result:False</span></span><br><span class="line">print(a.upper().isupper())  <span class="comment"># result:True</span></span><br><span class="line"></span><br><span class="line">a = <span class="string">'Hello,Python'</span></span><br><span class="line">print(a.islower())   <span class="comment"># result:False</span></span><br><span class="line">print(a.lower().islower())   <span class="comment"># result:True</span></span><br></pre></td></tr></table></figure><h4 id="5、给字符串编号-从左到右是是从0开始"><a href="#5、给字符串编号-从左到右是是从0开始" class="headerlink" title="5、给字符串编号(从左到右是是从0开始)"></a>5、给字符串编号(从左到右是是从0开始)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'Hello, World!'</span></span><br><span class="line"></span><br><span class="line">print(len(a)) <span class="comment"># result:13</span></span><br><span class="line">print(a[<span class="number">0</span>])   <span class="comment"># result:'H'</span></span><br><span class="line">print(a[<span class="number">9</span>])   <span class="comment"># result:'r'</span></span><br><span class="line">print(a[<span class="number">-1</span>])  <span class="comment"># 从右到左是从-1开始的   result:'!'</span></span><br></pre></td></tr></table></figure><h4 id="6、字符串截取"><a href="#6、字符串截取" class="headerlink" title="6、字符串截取"></a>6、字符串截取</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'Hello,World'</span></span><br><span class="line"></span><br><span class="line">print(a[<span class="number">2</span>:<span class="number">5</span>])  <span class="comment"># 从a开始到b结束    result:'llo'</span></span><br><span class="line">print(a[<span class="number">3</span>:])   <span class="comment"># 从a开始，截取到结束      # 'lo,World'</span></span><br><span class="line">print(a[:<span class="number">5</span>])   <span class="comment"># 从开始位置截取到b位置    # result:'Hello,'</span></span><br></pre></td></tr></table></figure><h4 id="7、去掉字符串的空格"><a href="#7、去掉字符串的空格" class="headerlink" title="7、去掉字符串的空格"></a>7、去掉字符串的空格</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">' Hello '</span></span><br><span class="line"></span><br><span class="line">print(a.strip())   <span class="comment"># 去掉前后的空格    # result:'Hello'</span></span><br><span class="line">print(a)           <span class="comment"># result:' Hello '</span></span><br><span class="line">print(b.lstrip())  <span class="comment"># 去掉前面的空格    # result:'Hello '</span></span><br><span class="line">print(b.rstrip())  <span class="comment"># 去掉后面的空格    # result:' Hello'</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇文章主要记录一下Python中关于字符串的相关操作，一来是为了自己加深记忆，二来是方便后期查找起来比较快速。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1、拼接字符串&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2、字符串复制&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3、字符串长度&lt;/p&gt;
&lt;/
      
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="python字符串" scheme="http://yoursite.com/tags/python%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>Android 6.0 权限</title>
    <link href="http://yoursite.com/2017/05/24/Android%206.0%20%E6%9D%83%E9%99%90/"/>
    <id>http://yoursite.com/2017/05/24/Android 6.0 权限/</id>
    <published>2017-05-24T13:24:12.000Z</published>
    <updated>2019-06-28T13:58:40.678Z</updated>
    
    <content type="html"><![CDATA[<p>​        对于开发者来说，Android应用权限这个词语应该都不会陌生，但是Android 6.0之后，Google做了一些调整：</p><ul><li>6.0以前的版本，设置应用权限只要在Manifest清单文件声明相应的权限即可，系统会在用户安装应用的时候告知用户该应用会获取哪些权限，并且会授权声明在配置清单文件的权限。</li><li>6.0以后版本（包括6.0），应用在运行时向用户请求权限，用户可以随时调用权限，所以说应用运行时需要检查权限是否授权。</li></ul><p>​        系统权限分为：正常权限和危险权限，声明在清单文件中的正常权限在应用安装时，直接被授权通过；危险权限需要用户确认授权应用才能获得相应权限，否则相应的功能将不能正常使用。所有的Android危险权限都属于权限组，下边列出开发者官网上的危险权限组和危险权限：</p><p>​        当应用在清单文件中声明以上任意权限，应用在运行的时候，首先会判断该权限是否获得用户的授权，如果获得用户的授权，涉及该权限的功能可以正常使用；反之，未获得用户授权，需要重新向用户请求授权，授权以弹出框的形式展现出来，弹出框告知用户应用内获得哪些权限，由用户选择授权或者是取消授权。换句话说：6.0之后的系统版本，用农户对应用内的权限有更高的控制权。</p><p>好了，言归正传，下边举个简单的栗子来说明一下。</p><p>步骤一：在清单文件中声明需要用到的权限</p><p><img src="/2017/05/24/Android 6/E:%5CHEXO%5Cthemes%5Cnext%5Csource%5Cimages%5C%E5%A3%B0%E6%98%8E%E6%9D%83%E9%99%90.jpg" alt="声明权限"></p><p>步骤二：在布局文件中添加并在代码中初始化Button，点击Button获取清单文件中声明的权限</p><p>![判断是否授权并请求权限](E:\HEXO\themes\next\source\images\判断是否授权并请求权限﻿.jpg)</p><p><img src="/2017/05/24/Android 6/E:%5CHEXO%5Cthemes%5Cnext%5Csource%5Cimages%5C%E5%9C%A8%E5%9B%9E%E8%B0%83%E6%96%B9%E6%B3%95%E4%B8%AD%E5%88%A4%E6%96%AD%E8%AF%B7%E6%B1%82%E7%BB%93%E6%9E%9C.jpg" alt="在回调方法中判断请求结果"></p><p><img src="/2017/05/24/Android 6/E:%5CHEXO%5Cthemes%5Cnext%5Csource%5Cimages%5CCall%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95.jpg" alt="Call（）方法"></p><p>分析：首先判断用户是否已经授权，如果已经授权，则直接调用call（）方法；反之，重新使用ActivityCompat.requestPermissions（）向用户请求权限，然后回掉方法中判断请求结果，用户通过授权，则调用Call（）方法；否则吐司提示用户拒绝授权。</p><p>最后贴上运行结果图</p><p>![运行结果](E:\HEXO\themes\next\source\images\运行结果﻿.jpg)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;​        对于开发者来说，Android应用权限这个词语应该都不会陌生，但是Android 6.0之后，Google做了一些调整：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;6.0以前的版本，设置应用权限只要在Manifest清单文件声明相应的权限即可，系统会在用户安装应用的时候告
      
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
      <category term="Android 6.0 权限" scheme="http://yoursite.com/tags/Android-6-0-%E6%9D%83%E9%99%90/"/>
    
  </entry>
  
  <entry>
    <title>获取 AndroidStudio 的 Share1 值</title>
    <link href="http://yoursite.com/2016/08/08/%E8%8E%B7%E5%8F%96%20AndroidStudio%20%E7%9A%84%20Share1%20%E5%80%BC/"/>
    <id>http://yoursite.com/2016/08/08/获取 AndroidStudio 的 Share1 值/</id>
    <published>2016-08-08T03:20:33.000Z</published>
    <updated>2019-06-28T13:52:46.849Z</updated>
    
    <content type="html"><![CDATA[<p>这个周末没事，准备做个BaiduMap比较全面的Demo，之前使用Ecplise比较方便，直接复制粘贴就行。但是AndroidStudio获取比较麻烦，刚开始我是一头雾水，不过最终还是研究出来了，记录一下，希望避过我踩过的坑。</p><p>步骤：</p><ul><li>1、打开AndroidStudio的Terminal。</li></ul><p><img src="/images/%E6%89%93%E5%BC%80Terional.jpg" alt="打开Terional"></p><ul><li>2、输入keytool -list -keystore D:\Soft\JDK1.8\MyJks.jks        这里需要注意的是：必须是在你存放的JKS文件路径才可以。</li></ul><p><img src="/images/%E8%BE%93%E5%85%A5%E6%8C%87%E4%BB%A4.jpg" alt="输入指令"></p><ul><li>3、输入口令，正确之后就可以看到Share1的值</li></ul><p>![显示Share1值﻿](/images/显示Share1值﻿.jpg)</p><p>到这里，Share1的值就获取到了，直接复制使用就OK。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这个周末没事，准备做个BaiduMap比较全面的Demo，之前使用Ecplise比较方便，直接复制粘贴就行。但是AndroidStudio获取比较麻烦，刚开始我是一头雾水，不过最终还是研究出来了，记录一下，希望避过我踩过的坑。&lt;/p&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li
      
    
    </summary>
    
      <category term="AndroidStudio" scheme="http://yoursite.com/categories/AndroidStudio/"/>
    
      <category term="Android" scheme="http://yoursite.com/categories/AndroidStudio/Android/"/>
    
    
      <category term="AndroidStudio" scheme="http://yoursite.com/tags/AndroidStudio/"/>
    
      <category term="Share1值" scheme="http://yoursite.com/tags/Share1%E5%80%BC/"/>
    
  </entry>
  
  <entry>
    <title>关于友盟的第三方登录、分享的流程实现</title>
    <link href="http://yoursite.com/2016/05/24/%E5%85%B3%E4%BA%8E%E5%8F%8B%E7%9B%9F%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E5%BD%95%E3%80%81%E5%88%86%E4%BA%AB%E7%9A%84%E6%B5%81%E7%A8%8B%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yoursite.com/2016/05/24/关于友盟的第三方登录、分享的流程实现/</id>
    <published>2016-05-24T14:39:58.000Z</published>
    <updated>2019-06-28T14:03:51.556Z</updated>
    
    <content type="html"><![CDATA[<p>现在几乎每款APP都有登陆、分享这些功能，正好最想项目中需要用到。因此记录一下实现的流程。此片博文主要是关于友盟的登陆分享的实现流程。</p><p>首先呢，友盟支持的第三方登录平台：新浪微博、腾讯微博、QQ、QQ空间、微信、人人网；</p><p>其次呢，友盟支持的第三方的分享平台：</p><ul><li><p>国内的平台：微信（微信好友及微信朋友圈）、QQ、QQ空间、新浪微博、腾讯微博、人人网、支付宝、豆瓣、印象笔记、有道云笔记、来往、易信等。</p></li><li><p>国外的平台：Facebook、Twitter、Google+、KaKao、Instagram、WhatsApp、Line、EverNote、Pocket、Pinterest、Linkedin、G+等。</p></li></ul><p>（Ps：可能会有人说我根本用不了那么多的平台，其实呢，你只需要在集成SDK的时候，将你需要使用的平台集成进去就好了）</p><p>友盟账号注册，添加应用，获取AppKey等这些我就不再这里多说了，因为我相信大家都是老司机，轻车熟路。但是下载SDK的时候，只需要下载自己将用到的东西就OK。</p><p>最后呢，就是那个集成流程：</p><ul><li>在Manifest中添加友盟的权限，AppKey，登陆分享的组件。</li><li>添加jar和资源文件。</li><li>在代码中设置要分享的内容和制定分享平台。</li><li>在指定的各个平台申请账号，添加应用。</li></ul><p>注：官方的文档是比较详细的，具体请戳这里：[<a href="http://dev.umeng.com/social/android/sdk-download?spm=0.0.0.0.g0iA18]" target="_blank" rel="noopener">http://dev.umeng.com/social/android/sdk-download?spm=0.0.0.0.g0iA18]</a>(</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;现在几乎每款APP都有登陆、分享这些功能，正好最想项目中需要用到。因此记录一下实现的流程。此片博文主要是关于友盟的登陆分享的实现流程。&lt;/p&gt;
&lt;p&gt;首先呢，友盟支持的第三方登录平台：新浪微博、腾讯微博、QQ、QQ空间、微信、人人网；&lt;/p&gt;
&lt;p&gt;其次呢，友盟支持的第三方
      
    
    </summary>
    
      <category term="友盟，第三方登录、分享" scheme="http://yoursite.com/categories/%E5%8F%8B%E7%9B%9F%EF%BC%8C%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E5%BD%95%E3%80%81%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
</feed>
