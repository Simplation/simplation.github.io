<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Simplation.WANG&#39;s Blogs</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-06-28T14:12:32.377Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Simplation.WANG</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android 中常见问题汇总(附解决办法)</title>
    <link href="http://yoursite.com/2019/06/04/Android%20%E4%B8%AD%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    <id>http://yoursite.com/2019/06/04/Android 中常见问题汇总/</id>
    <published>2019-06-04T11:47:04.000Z</published>
    <updated>2019-06-28T14:12:32.377Z</updated>
    
    <content type="html"><![CDATA[<p>本片博文主要介绍的是自己在日常工作中遇到的一些问题，在此统一做一个汇总，希望能后帮到大家。</p><ul><li>1.Android Studio 编译项目报错：The SourceSet ‘instrumentTest’ is not recognized by the Android Gradle Plugin.</li><li>2.导入Eclipse项目报错，Error:Could not determine the class-path for interface com.android.builder.model.AndroidProject.</li><li>3.使用Retrofit进行网络请求（post）的时候，log打印日志：java.lang.IllegalArgumentException: @FieldMap parameters can only be used with form encoding. (parameter #1)</li><li>4.查看SHAR1值的方法</li><li>5.Could not find com.android.tools.build:aapt2:3.2.1-4818971.</li><li>6.AAPT2 error: check logs for details</li><li>7.java.lang.UnsatisfiedLinkError: dlopen failed: library “/system/lib64/libweibosdkcore.so” needed or dlopened by “/system/lib64/libnativeloader.so” is not accessible for the namespace “classloader-namespace”</li><li>8.java.io.IOException: proguard.ParseException: Unexpected keyword ‘com.amap.api.mapcore.xx’</li><li>9.给项目添加 Android 10 的网络权限。</li><li>10.Android 中 String 资源文件添加空格/空白格</li></ul><hr><p><strong>1.Android Studio 编译项目报错：The SourceSet ‘instrumentTest’ is not recognized by the Android Gradle Plugin.</strong></p><p>解决办法：gradle 配置，这里的配置中 instrumentTest 已被弃用，不适用于现在的 gradle 版本。用 androidTest 替换 instrumentTest，编译运行即可。</p><p><strong>2.导入Eclipse 项目报错，Error:Could not determine the class-path for interface com.android.builder.model.AndroidProject.</strong></p><p>解决办法：修改自己本地安装的 gradle 版本号，然后重新编译执行。</p><p><strong>3.使用Retrofit进行网络请求（post）的时候，log打印日志：java.lang.IllegalArgumentException: @FieldMap parameters can only be used with form encoding. (parameter #1)</strong></p><p>解决办法：当POST请求时，@FormUrlEncoded和@Field简单的表单键值对。两个需要结合使用，否则会报错；@Query请求参数。无论是GET或POST的参数都可以用它来实现 </p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">正确写法：</span><br><span class="line"><span class="variable">@FormUrlEncoded</span></span><br><span class="line"><span class="variable">@POST</span>(forgetpwd)</span><br><span class="line">Observable&lt;ResponseBody&gt; forget(<span class="variable">@FieldMap</span> Map&lt;String, String&gt; map);</span><br></pre></td></tr></table></figure><p><strong>4.查看SHAR1值的办法。</strong></p><p>解决办法：<br>    (1).把apk的格式改为压缩文件，进行解压。<br>    (2).在解压出来的文件中获取META-INF文件夹下的CERT.RSA文件。<br>    (3).打开cmd Keytool –printcert –file 后面接文件的路径。 </p><p><strong>5.Could not find com.android.tools.build:aapt2:3.2.1-4818971.</strong></p><p>解决方法：在项目的build.gradle文件中，新增一行google()即可解决</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">allprojects </span>&#123;</span><br><span class="line"><span class="class">repositories </span>&#123;</span><br><span class="line">   jcenter()</span><br><span class="line">   google()<span class="comment">//新增这一行</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>6.AAPT2 error: check logs for details</strong></p><p>解决办法：构建 App 的时候，打开 Build 窗口，点击 “Toggle View” 切换到文本输出。查看log具体输出原因</p><p><strong>7.java.lang.UnsatisfiedLinkError: dlopen failed: library “/system/lib64/libweibosdkcore.so” needed or dlopened by “/system/lib64/libnativeloader.so” is not accessible for the namespace “classloader-namespace”</strong></p><p>解决办法：根据错误提示，缺少对应的so文件，需要ctrl+shift+n找到so，并拷贝到jniLibs文件夹下，注意对应的文件位置。重新rebuild即可。</p><p><strong>8.java.io.IOException: proguard.ParseException: Unexpected keyword ‘com.amap.api.mapcore.xx’</strong></p><p>解决办法：<br>    1.检查关键字是否错误，keep class 等<br>    2.检查包名是否拼写错误<br>    3.检查是否有中文字符，比如括号，点，空格，空格，空格</p><p><strong>9.给项目添加 Android 10 的网络权限。</strong><br>解决办法：<br>    1.将如下代码，添加到xml文件中     </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">network-security-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">base-config</span> <span class="attr">cleartextTrafficPermitted</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">network-security-config</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​     2.在application中引用xml文件即可。        </p><p><strong>10.Android 中 String 资源文件添加空格/空白格</strong><br>解决办法：Android 中字符串资源放置在 string.xml 文件中，并且该文件不能识别空格，但是在实际开发过程中需要用到空格，在需要设置的地方添加 &#160; 即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本片博文主要介绍的是自己在日常工作中遇到的一些问题，在此统一做一个汇总，希望能后帮到大家。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.Android Studio 编译项目报错：The SourceSet ‘instrumentTest’ is not recognized by th
      
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
      <category term="Android问题" scheme="http://yoursite.com/tags/Android%E9%97%AE%E9%A2%98/"/>
    
      <category term="汇总" scheme="http://yoursite.com/tags/%E6%B1%87%E6%80%BB/"/>
    
  </entry>
  
  <entry>
    <title>关于 HEXO 的一些常用命令</title>
    <link href="http://yoursite.com/2019/05/28/%E5%85%B3%E4%BA%8E%20hexo%20%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2019/05/28/关于 hexo 的常用命令/</id>
    <published>2019-05-28T13:26:08.114Z</published>
    <updated>2019-06-28T14:00:48.797Z</updated>
    
    <content type="html"><![CDATA[<p>由于电脑系统重装，之前的内容没有备份, 从2017年到2019年的内容靠自己之前整理的一些笔记还原了部分文章。不过目前已经重新将架子搭起来，准备继续搞起来！！！<br>欢迎来到[Hexo]（<a href="https://hexo.io/）！" target="_blank" rel="noopener">https://hexo.io/）！</a> 这是你的第一篇文章。 有关详细信息，请查看[文档]（<a href="https://hexo.io/docs/）。" target="_blank" rel="noopener">https://hexo.io/docs/）。</a> 如果您在使用Hexo时遇到任何问题，可以在[故障排除]（<a href="https://hexo.io/docs/troubleshooting.html）中找到答案，或者您可以在[GitHub]（https://github.com）上找到我。/" target="_blank" rel="noopener">https://hexo.io/docs/troubleshooting.html）中找到答案，或者您可以在[GitHub]（https://github.com）上找到我。/</a> hexojs/ HEXO/问题）。</p><p>＃＃ 快速开始</p><p>###创建一个新帖子</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new“我的新帖子”</span><br></pre></td></tr></table></figure><p>更多信息：[写作]（<a href="https://hexo.io/docs/writing.html）" target="_blank" rel="noopener">https://hexo.io/docs/writing.html）</a></p><p>###运行服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo服务器</span><br></pre></td></tr></table></figure><p>更多信息：[服务器]（<a href="https://hexo.io/docs/server.html）" target="_blank" rel="noopener">https://hexo.io/docs/server.html）</a></p><p>###生成静态文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo生成</span><br></pre></td></tr></table></figure><p>更多信息：[Generating]（<a href="https://hexo.io/docs/generating.html）" target="_blank" rel="noopener">https://hexo.io/docs/generating.html）</a></p><p>###部署到远程站点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>更多信息：[部署]（<a href="https://hexo.io/docs/deployment.html）" target="_blank" rel="noopener">https://hexo.io/docs/deployment.html）</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;由于电脑系统重装，之前的内容没有备份, 从2017年到2019年的内容靠自己之前整理的一些笔记还原了部分文章。不过目前已经重新将架子搭起来，准备继续搞起来！！！&lt;br&gt;欢迎来到[Hexo]（&lt;a href=&quot;https://hexo.io/）！&quot; target=&quot;_blan
      
    
    </summary>
    
      <category term="HEXO 的常用命令" scheme="http://yoursite.com/categories/HEXO-%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="hexo 的操作" scheme="http://yoursite.com/tags/hexo-%E7%9A%84%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>Python 第三方包管理工具-Pip</title>
    <link href="http://yoursite.com/2018/05/28/Python%20%E7%AC%AC%E4%B8%89%E6%96%B9%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-Pip/"/>
    <id>http://yoursite.com/2018/05/28/Python 第三方包管理工具-Pip/</id>
    <published>2018-05-28T01:41:04.000Z</published>
    <updated>2019-06-28T14:10:42.668Z</updated>
    
    <content type="html"><![CDATA[<p>Pip 是Python 推荐的用于安装Python软件包的工具。首先简单说明一下  Pip 的用法。</p><ul><li>1.安装包管理工具</li><li>2.升级包管理工具</li><li>3.安装第三方的模块</li><li>4.卸载第三方的模块</li></ul><p>1、安装包管理工具 - pip        </p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo easy-<span class="keyword">install</span> pip</span><br></pre></td></tr></table></figure><p>2、升级包管理工具的版本</p><p>​    Linux 或 Mac OS 上：</p><pre><code>pip install -U pip</code></pre><p>​    Windows 上：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip <span class="keyword">install</span> -U pip</span><br></pre></td></tr></table></figure><p>3、使用包管理工具安装第三方的模块</p><p>​    举个简单的栗子，使用命令：pip3 install + 模块名。例如安装 PyMySQL 模块，则需要使用命令：</p><pre><code>pip3 install PyMySQL</code></pre><p><img src="/images/%E6%BC%94%E7%A4%BA%E5%AE%89%E8%A3%85PyMySQL.png" alt="演示安装PyMySQL"></p><p>4、使用包管理工具卸载模块</p><p>使用卸载模块命令即可对相应模块进行移除操作，命令：pip uninstall + 模块名。</p><p><img src="/images/%E5%8D%B8%E8%BD%BD%E6%A8%A1%E5%9D%97.png" alt="卸载模块"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Pip 是Python 推荐的用于安装Python软件包的工具。首先简单说明一下  Pip 的用法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.安装包管理工具&lt;/li&gt;
&lt;li&gt;2.升级包管理工具&lt;/li&gt;
&lt;li&gt;3.安装第三方的模块&lt;/li&gt;
&lt;li&gt;4.卸载第三方的模块&lt;/li&gt;
      
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Pip" scheme="http://yoursite.com/tags/Pip/"/>
    
      <category term="包管理工具" scheme="http://yoursite.com/tags/%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Python 中字符串的相关用法</title>
    <link href="http://yoursite.com/2018/04/02/Python%20%E4%B8%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E7%9B%B8%E5%85%B3%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2018/04/02/Python 中字符串的相关用法/</id>
    <published>2018-04-02T06:31:41.000Z</published>
    <updated>2019-06-28T14:09:27.682Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章主要记录一下Python中关于字符串的相关操作，一来是为了自己加深记忆，二来是方便后期查找起来比较快速。</p><ul><li><p>1、拼接字符串</p></li><li><p>2、字符串复制</p></li><li><p>3、字符串长度</p></li><li><p>4、字符串大小写转换(如果不进行重新赋值操作，原数据是不会发生变化的)</p></li><li><p>5、给字符串编号(从左到右是是从0开始)</p></li><li><p>6、字符串截取 </p></li><li><p>7、去掉字符串的空格</p></li></ul><h4 id="1、拼接字符串"><a href="#1、拼接字符串" class="headerlink" title="1、拼接字符串"></a>1、拼接字符串</h4><h5 id="1-1、使用-来拼接，只能操作相同类型"><a href="#1-1、使用-来拼接，只能操作相同类型" class="headerlink" title="1.1、使用 + 来拼接，只能操作相同类型"></a>1.1、使用 + 来拼接，只能操作相同类型</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">"正在学习"</span></span><br><span class="line">b = <span class="string">"Python"</span></span><br><span class="line">c = a + b</span><br><span class="line"></span><br><span class="line">print(c)    <span class="comment"># 正在学习Python</span></span><br></pre></td></tr></table></figure><h5 id="1-2、使用占位符来拼接字符串"><a href="#1-2、使用占位符来拼接字符串" class="headerlink" title="1.2、使用占位符来拼接字符串"></a>1.2、使用占位符来拼接字符串</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'Py'</span></span><br><span class="line">b = <span class="string">'thon'</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'%s%s'</span> % (a, b))    <span class="comment"># Python</span></span><br></pre></td></tr></table></figure><h4 id="2、字符串复制"><a href="#2、字符串复制" class="headerlink" title="2、字符串复制"></a>2、字符串复制</h4><h5 id="2-1、使用等号进行字符串的复制"><a href="#2-1、使用等号进行字符串的复制" class="headerlink" title="2.1、使用等号进行字符串的复制"></a>2.1、使用等号进行字符串的复制</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'copy string...'</span></span><br><span class="line">print(a)        <span class="comment"># result:copystring...</span></span><br><span class="line"></span><br><span class="line">b = a</span><br><span class="line">print(b)        <span class="comment"># result:copy string...</span></span><br></pre></td></tr></table></figure><h4 id="3、字符串长度"><a href="#3、字符串长度" class="headerlink" title="3、字符串长度"></a>3、字符串长度</h4><h5 id="使用len-函数获取字符串的长度"><a href="#使用len-函数获取字符串的长度" class="headerlink" title="使用len()函数获取字符串的长度"></a>使用len()函数获取字符串的长度</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A = <span class="string">'copy string...'</span></span><br><span class="line"></span><br><span class="line">print(A)        <span class="comment"># result:copy string...</span></span><br><span class="line">print(len(A))   <span class="comment"># result:14</span></span><br></pre></td></tr></table></figure><h4 id="4、字符串大小写转换-如果不进行重新赋值操作，原数据是不会发生变化的"><a href="#4、字符串大小写转换-如果不进行重新赋值操作，原数据是不会发生变化的" class="headerlink" title="4、字符串大小写转换(如果不进行重新赋值操作，原数据是不会发生变化的)"></a>4、字符串大小写转换(如果不进行重新赋值操作，原数据是不会发生变化的)</h4><h5 id="4-1、将小写转换成大写"><a href="#4-1、将小写转换成大写" class="headerlink" title="4.1、将小写转换成大写"></a>4.1、将小写转换成大写</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'copy, python'</span></span><br><span class="line">a.upper()  <span class="comment"># 将小写完全变成大写</span></span><br><span class="line">print(a)   <span class="comment"># result:'COPY, PYTHON'</span></span><br><span class="line">print(a)   <span class="comment"># result:'copy, python'  # 原数据没有改变</span></span><br><span class="line"></span><br><span class="line">b = a.upper()  <span class="comment"># 进行重新赋值，就会发生变化</span></span><br><span class="line">print(b)   <span class="comment"># result:'COPY, PYTHON'</span></span><br></pre></td></tr></table></figure><h5 id="4-2、将大写转换成小写"><a href="#4-2、将大写转换成小写" class="headerlink" title="4.2、将大写转换成小写"></a>4.2、将大写转换成小写</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c = b.lower()</span><br><span class="line">print(c)   <span class="comment"># result:'copy, python'</span></span><br></pre></td></tr></table></figure><h5 id="4-3、只改变首字符的大小写"><a href="#4-3、只改变首字符的大小写" class="headerlink" title="4.3、只改变首字符的大小写"></a>4.3、只改变首字符的大小写</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">print(a)   <span class="comment"># result:'copy, python'</span></span><br><span class="line"></span><br><span class="line">a.capitalize()  <span class="comment"># 改变首字母为大写</span></span><br><span class="line">print(a)   <span class="comment"># result:'Copy, python'</span></span><br><span class="line">print(a)   <span class="comment"># result:'copy, python'</span></span><br><span class="line"></span><br><span class="line">b = a.capitalize()</span><br><span class="line">print(a)   <span class="comment"># result:'Copy, python'</span></span><br><span class="line">print(b)   <span class="comment"># result:'copy, python'</span></span><br></pre></td></tr></table></figure><h4 id="4-4、判断首字母是否是大写-不含有逗号，且首字母大写的情况才是正确"><a href="#4-4、判断首字母是否是大写-不含有逗号，且首字母大写的情况才是正确" class="headerlink" title="4.4、判断首字母是否是大写(不含有逗号，且首字母大写的情况才是正确)"></a>4.4、判断首字母是否是大写(不含有逗号，且首字母大写的情况才是正确)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'Hello, python'</span>  <span class="comment"># 含有逗号的情况,直接返回 False。第一个是大写，第二个是小写</span></span><br><span class="line">print(a.istitle())   <span class="comment"># result:False</span></span><br><span class="line"></span><br><span class="line">a = <span class="string">'Hello, Python'</span></span><br><span class="line">print(a.istitle())   <span class="comment"># result:True</span></span><br><span class="line"></span><br><span class="line">a = <span class="string">'HelloPython'</span></span><br><span class="line">print(a.istitle())   <span class="comment"># result:True</span></span><br></pre></td></tr></table></figure><h5 id="4-5、判断字符串是否都是大写"><a href="#4-5、判断字符串是否都是大写" class="headerlink" title="4.5、判断字符串是否都是大写"></a>4.5、判断字符串是否都是大写</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'HelloPython'</span></span><br><span class="line">print(a.isupper())   <span class="comment"># result:False</span></span><br><span class="line">print(a.upper().isupper())  <span class="comment"># result:True</span></span><br><span class="line"></span><br><span class="line">a = <span class="string">'Hello,Python'</span></span><br><span class="line">print(a.islower())   <span class="comment"># result:False</span></span><br><span class="line">print(a.lower().islower())   <span class="comment"># result:True</span></span><br></pre></td></tr></table></figure><h4 id="5、给字符串编号-从左到右是是从0开始"><a href="#5、给字符串编号-从左到右是是从0开始" class="headerlink" title="5、给字符串编号(从左到右是是从0开始)"></a>5、给字符串编号(从左到右是是从0开始)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'Hello, World!'</span></span><br><span class="line"></span><br><span class="line">print(len(a)) <span class="comment"># result:13</span></span><br><span class="line">print(a[<span class="number">0</span>])   <span class="comment"># result:'H'</span></span><br><span class="line">print(a[<span class="number">9</span>])   <span class="comment"># result:'r'</span></span><br><span class="line">print(a[<span class="number">-1</span>])  <span class="comment"># 从右到左是从-1开始的   result:'!'</span></span><br></pre></td></tr></table></figure><h4 id="6、字符串截取"><a href="#6、字符串截取" class="headerlink" title="6、字符串截取"></a>6、字符串截取</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'Hello,World'</span></span><br><span class="line"></span><br><span class="line">print(a[<span class="number">2</span>:<span class="number">5</span>])  <span class="comment"># 从a开始到b结束    result:'llo'</span></span><br><span class="line">print(a[<span class="number">3</span>:])   <span class="comment"># 从a开始，截取到结束      # 'lo,World'</span></span><br><span class="line">print(a[:<span class="number">5</span>])   <span class="comment"># 从开始位置截取到b位置    # result:'Hello,'</span></span><br></pre></td></tr></table></figure><h4 id="7、去掉字符串的空格"><a href="#7、去掉字符串的空格" class="headerlink" title="7、去掉字符串的空格"></a>7、去掉字符串的空格</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">' Hello '</span></span><br><span class="line"></span><br><span class="line">print(a.strip())   <span class="comment"># 去掉前后的空格    # result:'Hello'</span></span><br><span class="line">print(a)           <span class="comment"># result:' Hello '</span></span><br><span class="line">print(b.lstrip())  <span class="comment"># 去掉前面的空格    # result:'Hello '</span></span><br><span class="line">print(b.rstrip())  <span class="comment"># 去掉后面的空格    # result:' Hello'</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇文章主要记录一下Python中关于字符串的相关操作，一来是为了自己加深记忆，二来是方便后期查找起来比较快速。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1、拼接字符串&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2、字符串复制&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3、字符串长度&lt;/p&gt;
&lt;/
      
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="python字符串" scheme="http://yoursite.com/tags/python%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>Android 6.0 权限</title>
    <link href="http://yoursite.com/2017/05/24/Android%206.0%20%E6%9D%83%E9%99%90/"/>
    <id>http://yoursite.com/2017/05/24/Android 6.0 权限/</id>
    <published>2017-05-24T13:24:12.000Z</published>
    <updated>2019-06-28T13:58:40.678Z</updated>
    
    <content type="html"><![CDATA[<p>​        对于开发者来说，Android应用权限这个词语应该都不会陌生，但是Android 6.0之后，Google做了一些调整：</p><ul><li>6.0以前的版本，设置应用权限只要在Manifest清单文件声明相应的权限即可，系统会在用户安装应用的时候告知用户该应用会获取哪些权限，并且会授权声明在配置清单文件的权限。</li><li>6.0以后版本（包括6.0），应用在运行时向用户请求权限，用户可以随时调用权限，所以说应用运行时需要检查权限是否授权。</li></ul><p>​        系统权限分为：正常权限和危险权限，声明在清单文件中的正常权限在应用安装时，直接被授权通过；危险权限需要用户确认授权应用才能获得相应权限，否则相应的功能将不能正常使用。所有的Android危险权限都属于权限组，下边列出开发者官网上的危险权限组和危险权限：</p><p>​        当应用在清单文件中声明以上任意权限，应用在运行的时候，首先会判断该权限是否获得用户的授权，如果获得用户的授权，涉及该权限的功能可以正常使用；反之，未获得用户授权，需要重新向用户请求授权，授权以弹出框的形式展现出来，弹出框告知用户应用内获得哪些权限，由用户选择授权或者是取消授权。换句话说：6.0之后的系统版本，用农户对应用内的权限有更高的控制权。</p><p>好了，言归正传，下边举个简单的栗子来说明一下。</p><p>步骤一：在清单文件中声明需要用到的权限</p><p><img src="/2017/05/24/Android 6/E:%5CHEXO%5Cthemes%5Cnext%5Csource%5Cimages%5C%E5%A3%B0%E6%98%8E%E6%9D%83%E9%99%90.jpg" alt="声明权限"></p><p>步骤二：在布局文件中添加并在代码中初始化Button，点击Button获取清单文件中声明的权限</p><p>![判断是否授权并请求权限](E:\HEXO\themes\next\source\images\判断是否授权并请求权限﻿.jpg)</p><p><img src="/2017/05/24/Android 6/E:%5CHEXO%5Cthemes%5Cnext%5Csource%5Cimages%5C%E5%9C%A8%E5%9B%9E%E8%B0%83%E6%96%B9%E6%B3%95%E4%B8%AD%E5%88%A4%E6%96%AD%E8%AF%B7%E6%B1%82%E7%BB%93%E6%9E%9C.jpg" alt="在回调方法中判断请求结果"></p><p><img src="/2017/05/24/Android 6/E:%5CHEXO%5Cthemes%5Cnext%5Csource%5Cimages%5CCall%EF%BC%88%EF%BC%89%E6%96%B9%E6%B3%95.jpg" alt="Call（）方法"></p><p>分析：首先判断用户是否已经授权，如果已经授权，则直接调用call（）方法；反之，重新使用ActivityCompat.requestPermissions（）向用户请求权限，然后回掉方法中判断请求结果，用户通过授权，则调用Call（）方法；否则吐司提示用户拒绝授权。</p><p>最后贴上运行结果图</p><p>![运行结果](E:\HEXO\themes\next\source\images\运行结果﻿.jpg)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;​        对于开发者来说，Android应用权限这个词语应该都不会陌生，但是Android 6.0之后，Google做了一些调整：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;6.0以前的版本，设置应用权限只要在Manifest清单文件声明相应的权限即可，系统会在用户安装应用的时候告
      
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
      <category term="Android 6.0 权限" scheme="http://yoursite.com/tags/Android-6-0-%E6%9D%83%E9%99%90/"/>
    
  </entry>
  
  <entry>
    <title>获取 AndroidStudio 的 Share1 值</title>
    <link href="http://yoursite.com/2016/08/08/%E8%8E%B7%E5%8F%96%20AndroidStudio%20%E7%9A%84%20Share1%20%E5%80%BC/"/>
    <id>http://yoursite.com/2016/08/08/获取 AndroidStudio 的 Share1 值/</id>
    <published>2016-08-08T03:20:33.000Z</published>
    <updated>2019-06-28T13:52:46.849Z</updated>
    
    <content type="html"><![CDATA[<p>这个周末没事，准备做个BaiduMap比较全面的Demo，之前使用Ecplise比较方便，直接复制粘贴就行。但是AndroidStudio获取比较麻烦，刚开始我是一头雾水，不过最终还是研究出来了，记录一下，希望避过我踩过的坑。</p><p>步骤：</p><ul><li>1、打开AndroidStudio的Terminal。</li></ul><p><img src="/images/%E6%89%93%E5%BC%80Terional.jpg" alt="打开Terional"></p><ul><li>2、输入keytool -list -keystore D:\Soft\JDK1.8\MyJks.jks        这里需要注意的是：必须是在你存放的JKS文件路径才可以。</li></ul><p><img src="/images/%E8%BE%93%E5%85%A5%E6%8C%87%E4%BB%A4.jpg" alt="输入指令"></p><ul><li>3、输入口令，正确之后就可以看到Share1的值</li></ul><p>![显示Share1值﻿](/images/显示Share1值﻿.jpg)</p><p>到这里，Share1的值就获取到了，直接复制使用就OK。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这个周末没事，准备做个BaiduMap比较全面的Demo，之前使用Ecplise比较方便，直接复制粘贴就行。但是AndroidStudio获取比较麻烦，刚开始我是一头雾水，不过最终还是研究出来了，记录一下，希望避过我踩过的坑。&lt;/p&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li
      
    
    </summary>
    
      <category term="AndroidStudio" scheme="http://yoursite.com/categories/AndroidStudio/"/>
    
      <category term="Android" scheme="http://yoursite.com/categories/AndroidStudio/Android/"/>
    
    
      <category term="AndroidStudio" scheme="http://yoursite.com/tags/AndroidStudio/"/>
    
      <category term="Share1值" scheme="http://yoursite.com/tags/Share1%E5%80%BC/"/>
    
  </entry>
  
  <entry>
    <title>关于友盟的第三方登录、分享的流程实现</title>
    <link href="http://yoursite.com/2016/05/24/%E5%85%B3%E4%BA%8E%E5%8F%8B%E7%9B%9F%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E5%BD%95%E3%80%81%E5%88%86%E4%BA%AB%E7%9A%84%E6%B5%81%E7%A8%8B%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yoursite.com/2016/05/24/关于友盟的第三方登录、分享的流程实现/</id>
    <published>2016-05-24T14:39:58.000Z</published>
    <updated>2019-06-28T14:03:51.556Z</updated>
    
    <content type="html"><![CDATA[<p>现在几乎每款APP都有登陆、分享这些功能，正好最想项目中需要用到。因此记录一下实现的流程。此片博文主要是关于友盟的登陆分享的实现流程。</p><p>首先呢，友盟支持的第三方登录平台：新浪微博、腾讯微博、QQ、QQ空间、微信、人人网；</p><p>其次呢，友盟支持的第三方的分享平台：</p><ul><li><p>国内的平台：微信（微信好友及微信朋友圈）、QQ、QQ空间、新浪微博、腾讯微博、人人网、支付宝、豆瓣、印象笔记、有道云笔记、来往、易信等。</p></li><li><p>国外的平台：Facebook、Twitter、Google+、KaKao、Instagram、WhatsApp、Line、EverNote、Pocket、Pinterest、Linkedin、G+等。</p></li></ul><p>（Ps：可能会有人说我根本用不了那么多的平台，其实呢，你只需要在集成SDK的时候，将你需要使用的平台集成进去就好了）</p><p>友盟账号注册，添加应用，获取AppKey等这些我就不再这里多说了，因为我相信大家都是老司机，轻车熟路。但是下载SDK的时候，只需要下载自己将用到的东西就OK。</p><p>最后呢，就是那个集成流程：</p><ul><li>在Manifest中添加友盟的权限，AppKey，登陆分享的组件。</li><li>添加jar和资源文件。</li><li>在代码中设置要分享的内容和制定分享平台。</li><li>在指定的各个平台申请账号，添加应用。</li></ul><p>注：官方的文档是比较详细的，具体请戳这里：[<a href="http://dev.umeng.com/social/android/sdk-download?spm=0.0.0.0.g0iA18]" target="_blank" rel="noopener">http://dev.umeng.com/social/android/sdk-download?spm=0.0.0.0.g0iA18]</a>(</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;现在几乎每款APP都有登陆、分享这些功能，正好最想项目中需要用到。因此记录一下实现的流程。此片博文主要是关于友盟的登陆分享的实现流程。&lt;/p&gt;
&lt;p&gt;首先呢，友盟支持的第三方登录平台：新浪微博、腾讯微博、QQ、QQ空间、微信、人人网；&lt;/p&gt;
&lt;p&gt;其次呢，友盟支持的第三方
      
    
    </summary>
    
      <category term="友盟，第三方登录、分享" scheme="http://yoursite.com/categories/%E5%8F%8B%E7%9B%9F%EF%BC%8C%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E5%BD%95%E3%80%81%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
</feed>
