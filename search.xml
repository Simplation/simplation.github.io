<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Python 中 MySQL 的相关操作]]></title>
    <url>%2F2019%2F07%2F14%2FPython%20%E4%B8%AD%20MySQL%20%E7%9A%84%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[Python 中 MySQL 的相关操作1、MySQL 安装 1.1、下载 MySQL ​ 官网：https://dev.mysql.com/downloads/mysql/ 选择对应版本下载即可 1.2、安装 ​ 安装步骤就不在这里赘述。 2、MySQL 数据库连接，并实现增删改查等操作​ 注意：首先需要需要进行 import 操作 2.1、创建表操作(数据库相同的表明只能创建一次，多次创建会报错) 12345678910111213141516171819202122232425262728293031323334353637import pymysql# 创建表的操作 def create_table(): # 连接数据库 db = pymysql.connect(host='localhost', user='root', password='simplation', db='test' ) sql = '''create table if not exists department ( id int NOT NULL AUTO_INCREMENT, name text, sex text, salary float, PRIMARY KEY (`id`))''' # 使用 cursor() 创建 cursor 对象 cursor = db.cursor() try: # 执行 sql 语句的操作 cursor.execute(sql) # 提交数据库的操作 db.commit() print('create db success.') except BaseException as e: # 如果发生意外，则进行回滚操作 db.rollback() print(e) finally: # 关闭游标和数据库 cursor.close() db.close() 2.2、添加数据库操作 123456789101112131415161718192021222324252627282930313233343536import pymysql# 插入数据库的操作 def insert_table(): # 连接数据库 db = pymysql.connect(host='localhost', user='root', password='simplation', db='test', charset="utf8") print('数据库连接成功.') # sql 语句 sql = 'insert into department (name, sex, salary) values(%s, %s, %s)' # 使用 cursor() 创建 cursor 对象 cursor = db.cursor() try: # 创建要插入的值 values = ('Mr.Li', '男', 9000) # 执行 sql 语句 cursor.execute(sql, values) # 提交数据库操作 db.commit() print('insert db success.') except BaseException as e: # 出现意外则进行回滚操作 db.rollback() print(e) finally: # 关闭游标和数据库 cursor.close() db.close() 2.3、修改数据库操作 12345678910111213141516171819202122232425262728293031323334353637383940import pymysql# 修改数据库的操作def update_table(): db = pymysql.connect(host='localhost', user='root', password='simplation', db='test', charset='utf8') print('数据库连接成功.') sql = 'update department set name=%s, sex=%s, salary=%s where id = 2' # 创建 cursor 对象 cursor = db.cursor() try: values = ('John', '男', 7500) # 执行 sql 语句 cursor.execute(sql, values) # 提交数据库操作 db.commit() print('update db success.') except BaseException as e: # 出现异常则进行回滚操作 db.rollback() print(e) finally: # 关闭游标和数据库 cursor.close() db.close() 2.4、查询数据库操作 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152import pymysql# 查询数据库的操作def query_table(): db = pymysql.connect(host='localhost', user='root', password='simplation', db='test', charset='utf8') print('连接数据库成功.') sql = 'select * from department' cursor = db.cursor() try: # 执行 sql 语句 cursor.execute(sql) # 查询一条记录 result = cursor.fetchone() print('查询到的一条记录是: id=%s name=%s, sex=%s, salary=%d' % (result[0], result[1], result[2], result[3])) # 如果先⽤ fetchone()，游标是从 1 开始 # 重置游标位置，偏移量:⼤于0向后移动;⼩于0向前移动，mode默认是relative # relative:表示从当前所在的⾏开始移动; absolute:表示从第⼀⾏开始移动 cursor.scroll(0, mode='absolute') # 查询多条语句 results = cursor.fetchall() for result in results: print('查询到的记录是：id=%s, name=%s, sex=%s, salary=%s' % (result[0], result[1], result[2], result[3])) print('query db success.') except BaseException as e: # 出现异常则进行回滚操作 db.rollback() print(e) finally: # 关闭游标和数据库 cursor.close() db.close() 2.5、删除数据库操作 123456789101112131415161718192021222324252627282930313233343536import pymysql# 删除数据库的操作def delete_table(): db = pymysql.connect(host='localhost', user='root', password='simplation', db='test') print('db connect success.') sql = 'delete from department where id=%s' cursor = db.cursor() try: # 执行 sql 语句 cursor.execute(sql, 5) db.commit() print('delete db success.') except BaseException as e: # 出现异常则进行回滚操作 db.rollback() print(e) finally: # 关闭游标和数据库 cursor.close() db.close()]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>MySQL的相关操作</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python 中标准数据类型]]></title>
    <url>%2F2019%2F07%2F11%2FPython%20%E4%B8%AD%E6%A0%87%E5%87%86%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[Python 中标准数据类型标准数据类型：​ Number(数字)、String(字符串)、List(列表)、Tuple(元祖)、Dictionary(字典)、Sets(集合) Number(数字) 1.1、支持int(整数类型)、float(浮点型)、bool(布尔)、complex(复数) 123456789&gt;&gt;&gt; a = 100 # 整数类型&gt;&gt;&gt; b = 10.0 # 浮点型&gt;&gt;&gt; c = True # 布尔&gt;&gt;&gt; print(a,b,c) # 打印结果：100 10.0 True复数由实数部分和虚数部分构成，可以使用a + bj,或者complex(a, b)表示，复数的是实部a和虚部b都是浮点型 1.2、数值运算 加(+)、减(-)、乘()、除(/)、取余(%)、乘方(*) 1234567891011121314151617&gt;&gt;&gt; a = 20&gt;&gt;&gt; b = 30&gt;&gt;&gt; print(a + b) # 加 打印结果：50&gt;&gt;&gt; print(a - b) # 减 打印结果：-10&gt;&gt;&gt; print(a * b) # 乘 打印结果：600&gt;&gt;&gt; print(a / b) # 除 打印结果：.6666666666666666&gt;&gt;&gt; print(a % b) # 取余 打印结果：20&gt;&gt;&gt; print(a ** b) # 乘方 打印结果：1073741824000000000000000000000000000000注：除法(/)返回的都是浮点类型的数值，而除法 (//)返回的是整型 String(字符串)​ Python中的字符串使用’’(单引号)或者””(双引号)将字符串进行包裹起来，但是特殊字符需要使用转义字符()进行转义操作。 2.1、常用操作 12345678910111213141516171819202122232425262728293031323334353637383940414243&gt;&gt;&gt; string = 'Hello， I \'m Simplation.'&gt;&gt;&gt; print(string) # 输出操作 返回 Hello， I 'm Simplation.&gt;&gt;&gt; print(len(string)) # 打印结果：23&gt;&gt;&gt; print(string[0]) # 打印结果：H&gt;&gt;&gt; print(string[0, -1]) # 打印结果：Hello， I 'm Simplation&gt;&gt;&gt; print(string[11:22]) # 打印结果：Simplation &gt;&gt;&gt; print(string[11:]) # 打印结果：Simplation.&gt;&gt;&gt; print(string * 2) # 打印结果：Hello， I 'm Simplation.Hello， I 'm Simplation.&gt;&gt;&gt; print('everyone ' + string) #e打印结果：everyone Hello， I 'm Simplation.&gt;&gt;&gt; print('Simplation' in string) # True&gt;&gt;&gt; print(string.find('Simplation')) # 查找 返回字符串所在下标 12&gt;&gt;&gt; print(string.index('Sim')) # 12&gt;&gt;&gt; print(string.upper()) # HELLO， I 'M SIMPLATION.&gt;&gt;&gt; print(string.lower()) # hello， i 'm simplation.&gt;&gt;&gt; print('Simplation' in string) # True&gt;&gt;&gt; print(string.capitalize()) # Hello， i 'm simplation.&gt;&gt;&gt; print(string.isspace()) # False&gt;&gt;&gt; print(string.replace('Sim', ' ')) # Hello， I 'm plation.&gt;&gt;&gt; print(string.split('m')) # ["Hello， I '", ' Si', 'plation.']&gt;&gt;&gt; print(string.strip()) # 去掉字符串左右两边的空格 Hello， I 'm Simplation.&gt;&gt;&gt; print(string.rstrip()) # 去掉字符串右边的空格 Hello， I 'm Simplation.&gt;&gt;&gt; print(string.lstrip()) # 去掉字符串左边的空格Hello， I 'm Simplation. 2.2、占位符 常用占位符：%d表示那个位置是整数；%f表示那个位置是浮点数；%s表示那个位置是字符串 12345678&gt;&gt;&gt; print('Hello, %s' %'Python’) # Hello, Python&gt;&gt;&gt; print('Hello, %d%s%.2f' %(666, 'Python', 9.99)) # Hello, 666Python9.99注: 2.2.1、% 是转换开始的标志；2.2.2、如果不止一个占位符，要写在一个圆括号内，中间用逗号隔开；2.2.3、%.2f代表两位小数，不是两位后会四舍五入 2.3、字符串换行 2.3.1、三个单引号：Python中三个单引号允许一个字符串跨多行，字符串中也可以包括换行符、制表符以及其他的字符， 123456789101112&gt;&gt;&gt; s = '''相思唐代：王维红豆生南国，春来发几枝。愿君多采撷，此物最相思。'''&gt;&gt;&gt; print(s)相思唐代：王维红豆生南国，春来发几枝。愿君多采撷，此物最相思。 2.3.2、三个双引号 2.3.3、\结尾 List(列表)​ 列表是写在方括号[]中，元素用逗号,隔开,类标中的元素类型可以是不相同的 123&gt;&gt;&gt; L = [6, 9.9, 'Simplation', True, 'I\'m Simplation'] # 创建列表&gt;&gt;&gt; print(L) # [6, 9.9, 'Simplation', True, "I'm Simplation"] 3.1、访问元素 1234567891011&gt;&gt;&gt; print(L) # 打印列表，结果：[6, 9.9, 'Simplation', True, "I'm Simplation”]&gt;&gt;&gt; print(len(L)) # 打印列表的长度 结果：5&gt;&gt;&gt; print(L[1]) # 打印列表的第一个元素 结果：9.9&gt;&gt;&gt; print(L[2:4]) # 输出列表的第二个和第三个元素 结果：['Simplation', True]&gt;&gt;&gt; print(L[:4]) # 输出一个第0个到第三个元素 结果：[6, 9.9, 'Simplation', True]&gt;&gt;&gt; print(L[-1]) # 输出最后一个元素 结果：I'm Simplation 3.2、添加元素 12345678910111213141516171819202122232425262728&gt;&gt;&gt; L1 = [False]&gt;&gt;&gt; print(L + L1) # List 拼接['1024', 9.9, 'Simplation', True, "I'm Simplation", False]&gt;&gt;&gt; L.extend(L1) # 在List的末尾一次性增加一个元素&gt;&gt;&gt; print(L)['1024', 9.9, 'Simplation', True, "I'm Simplation", False]&gt;&gt;&gt; L.extend(L1) # 每执行一次extend函数，就会在列表的最后一项添加一个元素&gt;&gt;&gt; print(L)['1024', 9.9, 'Simplation', True, "I'm Simplation", False, False]&gt;&gt;&gt; L.append('进行拼接测试’) # append()方法拼接，在列表最后一项新增一个元素&gt;&gt;&gt; print(L)['1024', 9.9, 'Simplation', True, "I'm Simplation", False, False, '进行拼接测试’]&gt;&gt;&gt; L.insert(1, '不放假’) # 在列表的某个位置插入元素 &gt;&gt;&gt; print(L)['1024', '不放假', 9.9, 'Simplation', True, "I'm Simplation", False, False, '进行拼接测试'] 3.3、更新元素 123&gt;&gt;&gt; L[0] = '1024’ # 更新第0个元素的值为’1024’&gt;&gt;&gt; print(L) # 打印更新后的列表 ['1024', 9.9, 'Simplation', True, "I'm Simplation"] 3.4、删除元素 123456789101112131415161718192021222324&gt;&gt;&gt; L.pop() # pop ⽅法删除，可指定位置，默认最后⼀个"I'm Simplation”&gt;&gt;&gt; L['1024', 9.9, 'Simplation', True]&gt;&gt;&gt; L.pop(0) # pop 指定位置 、'1024'&gt;&gt;&gt; L[9.9, 'Simplation', True]&gt;&gt;&gt; del L[-1] # 删除列表最后一个元素&gt;&gt;&gt; L[9.9, 'Simplation’]&gt;&gt;&gt; L.remove(9.9) # 移除列表中某个值的第⼀个匹配项，没有会抛异常&gt;&gt;&gt; L['Simplation'] 3.5、其他 1234567891011121314&gt;&gt;&gt; print(L * 2) # 将列表的内容打印两次['1024', 9.9, 'Simplation', True, "I'm Simplation", '1024', 9.9, 'Simplation', True, "I'm Simplation”]&gt;&gt;&gt; L.reverse() # 反向列表中元&gt;&gt;&gt; print(L)&gt;&gt;&gt; L3 = L.copy() # 复制 浅拷贝操作&gt;&gt;&gt; print(L3)["I'm Simplation", True, 'Simplation', 9.9, '1024’]&gt;&gt;&gt; L3.clear() # 清空列表&gt;&gt;&gt; L3[] Tuple(元祖)​ 元组写在⼩括号 () ⾥，元素之间⽤逗号隔开，元组的元素不能修改，没有 append()，insert() 这样的⽅法。 123456789101112131415161718192021222324252627282930&gt;&gt;&gt; s = (100, 100.0, 'Simplation', True, 'I\'am Simpaltion.', [1, 2, 3])&gt;&gt;&gt; print(s)(100, 100.0, 'Simplation', True, "I'am Simpaltion.", [1, 2, 3])&gt;&gt;&gt; print(s[0]) # 输出 list 第 1 个元素100&gt;&gt;&gt; print(s[2:5]) # 输出 lsit 下标从第 2 个到第 4个元素('Simplation', True, "I'am Simpaltion.”)&gt;&gt;&gt; print(s[2:]) # 输出 lsit 下标从第 2 个起后⾯所有元素('Simplation', True, "I'am Simpaltion.", [1, 2, 3])&gt;&gt;&gt; s1 = (1, False)&gt;&gt;&gt; print(s + s1) # list 拼接(100, 100.0, 'Simplation', True, "I'am Simpaltion.", [1, 2, 3], 1, False)&gt;&gt;&gt; print(s * 2) # 打印两次(100, 100.0, 'Simplation', True, "I'am Simpaltion.", [1, 2, 3], 100, 100.0, 'Simplation', True, "I'am Simpaltion.", [1, 2, 3])&gt;&gt;&gt; print(len(s)) # 输出 list ⻓度6注：虽然元组元素不能修改，但能把 list 当特殊元素。 Dictionary(字典)​ 字典⽤ { } 标识或者 dict() ⽅法创建字典，它是⼀个⽆序的键 (key) : 值 (value) 对集合。键 (key) 必须 使⽤不可变类型。在同⼀个字典中，键 (key) 必须是唯⼀的（不唯⼀，取最后⼀个值，不建议这样 写）。{ } 是⽤来创建⼀个空字典。 1dic = &#123;'name':'Simplation', 'site': '[http://www.baidu.com]', 'code': 1024&#125; 5.1、访问元素 123456&gt;&gt;&gt; print(dic) # 打印字典&#123;'name': 'Simplation', 'site': '[http://www.baidu.com]', 'code': 1024&#125;&gt;&gt;&gt; print(dic['site']) # 输出键为 site 的值[http://www.baidu.com[http://www.baidu.com 5.2、修改元素 123&gt;&gt;&gt; dic['code'] = 520 # 修改元素 &gt;&gt;&gt; print(dic['code']) # 打印：520&#123;'name': 'Simplation', 'site': '[http://www.baidu.com]', 'code': 520&#125; 5.3、新增元素 123&gt;&gt;&gt; dic['id'] = 1314 # 新增元素&gt;&gt;&gt; dic、&#123;'name': 'Simplation', 'site': '[http://www.baidu.com]', 'code': 520, 'id': 1314&#125; 5.4、删除元素 1234567891011&gt;&gt;&gt; dic.pop('code’) # 删除 code 键1024&gt;&gt;&gt; print(dic)&#123;'name': 'Simplation', 'site': '[http://www.baidu.com]’&#125;&gt;&gt;&gt; dic.clear() # 清空字典&gt;&gt;&gt; dic&#123;&#125; 5.5、其他 123456789101112131415161718# dict() ⽅法创建字典 d = dict(id=1024, name&gt;&gt;&gt; d = dict(id=1024, name='simplation', site='[http://www.baidu.com/]')&gt;&gt;&gt; print(d)&#123;'id': 1024, 'name': 'simplation', 'site': '[http://www.baidu.com/]'&#125;&gt;&gt;&gt; print(d.copy()) # 浅拷贝&#123;'id': 1024, 'name': 'simplation', 'site': '[http://www.baidu.com/]'&#125;&gt;&gt;&gt; dic.keys() # 打印字典中的所有key值dict_keys(['name', 'site', 'code’])&gt;&gt;&gt; dic.values() # 打印字典中所有value值dict_values(['Simplation', '[http://www.baidu.com]', 1024]) Sets(集合)​ 集合是⼀个⽆序不重复元素的序列，⽤⼤括号 { } 或者 set() 函数创建。创建⼀个空集合必须⽤ set()， 因为 { } 是⽤来创建⼀个空字典。 123&gt;&gt;&gt; s = &#123;'name', 'site', 'code', 1, 1&#125; # 创建集合&gt;&gt;&gt; print(s)&#123;1, 'name', 'site', 'code'&#125; 空值​ Python ⾥⼀个特殊的值，叫做空值，⽤ None 表示。 数据类型转换​ Python中内置的bif可以进行数据间的类型转换 1234567int(x)：将 x 转换为⼀个整数 float(x)：将 x 转换到⼀个浮点数 str(x)：将对象 x 转换为字符串 list(s)：将序列 s 转换为⼀个列表]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>基本数据类型</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Chrome 常用插件汇总]]></title>
    <url>%2F2019%2F07%2F01%2FChrome%20%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E6%B1%87%E6%80%BB%2F</url>
    <content type="text"><![CDATA[自做 Android 以来，成为一名 Google 的死忠粉，Google 的软件产品几乎都用过，这篇主要记录一下 Chrome 的相关扩展程序，有了这些插件，你的 Chrome 绝对堪称神器。(要有取舍，当然这里忽略内存！！！) 百度网盘助手 把网盘的下载地址导出到aria2/aria2-rpc，支持YAAW Adblock Plus 免费广告拦截程序 Augmented Steam ChroPath 生成和验证独特的选择器 Color by Fardos 从网站中选择颜色，保存颜色和渐变，获得匹配的色调和色调，并创建美丽的渐变 Dark Reader 黑色主题，适用于任何网站。关爱眼睛，就使用Dark Reader进行夜间和日间浏览 GayHub github的一个很棒的扩展程序 Infinity 新标签页(Pro) 百万用户选择的新标签页和快速拨号，自由添加网站图标，云端高清壁纸，快速访问书签、天气、笔记、待办事项、扩展管理与历史记录 JavaScript and CSS Code Beautifier 打开 .css / .js / .json 文件时，可以美化 CSS，JavaScript 和 JSON 代码。 JSONView 验证、查看、并格式化 JSON 文档 Momentum 美化 Chrome 启动页，将新标签页替换为具有待办事项，天气和灵感的个人仪表板等。 Octotree 以树形结构显示 Github 仓库的代码，省去一级一级查找 Reggy 创建随机身份并在几秒钟内注册任何网站！ Reggy还包括一个内置的表格填充物 uBlock Origin 一款高效的网络请求过滤工具，占用极低的内存和 CPU。 Web Scraper 网站数据提取工具 书签侧边栏 在浏览器视图区左侧添加固定式的, 管理所有书签的侧边栏. 二管家 一个全能的拓展管理和用户脚本管理拓展 简悦 - SimpRead 让你瞬间进入沉浸式阅读的 Chrome 扩展，类似 Safari 的阅读模式。 包含 聚焦模式和阅读模式两种 谷歌访问助手 不用多说了吧 达达划词翻译 划词翻译、生词本、吐司弹词、与扇贝同步 Vysor无需 root, 能够在 Chrome 里通过 USB 直接控制 Android 设备]]></content>
      <categories>
        <category>Chrome</category>
        <category>Browser</category>
      </categories>
      <tags>
        <tag>Chrome Extension</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android 中常见问题汇总(附解决办法)]]></title>
    <url>%2F2019%2F06%2F04%2FAndroid%20%E4%B8%AD%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB%2F</url>
    <content type="text"><![CDATA[本片博文主要介绍的是自己在日常工作中遇到的一些问题，在此统一做一个汇总，希望能后帮到大家。 1.Android Studio 编译项目报错：The SourceSet ‘instrumentTest’ is not recognized by the Android Gradle Plugin. 2.导入Eclipse项目报错，Error:Could not determine the class-path for interface com.android.builder.model.AndroidProject. 3.使用Retrofit进行网络请求（post）的时候，log打印日志：java.lang.IllegalArgumentException: @FieldMap parameters can only be used with form encoding. (parameter #1) 4.查看SHAR1值的方法 5.Could not find com.android.tools.build:aapt2:3.2.1-4818971. 6.AAPT2 error: check logs for details 7.java.lang.UnsatisfiedLinkError: dlopen failed: library “/system/lib64/libweibosdkcore.so” needed or dlopened by “/system/lib64/libnativeloader.so” is not accessible for the namespace “classloader-namespace” 8.java.io.IOException: proguard.ParseException: Unexpected keyword ‘com.amap.api.mapcore.xx’ 9.给项目添加 Android 10 的网络权限。 10.Android 中 String 资源文件添加空格/空白格 11.Android XListView 在刷新数据是越界问题。 12.Didn’t find class “android.support.v4.content.FileProvider” on path: 13.AndroidStudio无法连接模拟器。 14.Android java.lang.RuntimeException: Parcelable encountered IOException writing serializable object 15.Android.os.TransactionTooLargeException 异常解决 16.java.lang.IllegalArgumentException: Both dimensions must be greater than 0 二维码扫描 17.Error:Execution failed for task ‘:包路径:mergeReleaseResources’. 18.Could not get unknown property ‘jnilibs’ for source set ‘main’ of type org.gradle.api.internal.tasks.DefaultSourceSet. 19.android N 调用相机错误提示: android.os.FileUriExposedException: file:///storage/emulated/0/picture1551231656.jpg exposed beyond app through Intent.getData() 20.The number of method references in a .dex file cannot exceed 64K. 21.Android Studio中references to other resources are not supported by build-time PNG generation解决方案 22.解决”No toolchains found in the NDK toolchains folder for ABI with prefix: 23.Annotation processors must be explicitly declared now. The following dependencies on the compile classpath are found to contain annotation processor. Please add them to the annotationProcessor configuration. 24.java.util.concurrent.ExecutionException: com.android.builder.internal.aapt.v2.Aapt2Exception: Android resource compilation failed Output: E:\working space\GaoxinSafetyEnter\appclient\build\intermediates\incremental\mergeDebugResources\merged.dir\values\values.xml:932: error: inner element must either be a resource reference or empty. 25.Android TextView 显示后台返回的富文本内容 26.Android Activity 页面 Edittext 控件自动弹出软键盘的问题。（修改为使用时才弹出软键盘） 27.Could not find manifest-merger.jar (com.android.tools.build:manifest-merger:26.0.1). 28.布局报错：Error parsing XML: not well-formed (invalid token) 29.Android P 提示 java.io.IOException: Cleartext HTTP traffic to XXX not permitted 30.Android P Android java.lang.NoClassDefFoundError: Failed resolution of: Lorg/apache/commons/logging/LogFactory 31.java.lang.NoClassDefFoundError: Failed resolution of: Lokio/Buffer 32.java.lang.RuntimeException: Parcelable encountered IOException writing serializable object (name = com.example.app.moudle.CheckAgainstStandard$ListBean) 33.Android studio Could not download guava.jar 34.java.lang.IllegalArgumentException: timeout too large. 35.java.lang.SecurityException: Need to declare android.permission.REQUEST_INSTALL_PACKAGES to call this api 1.Android Studio 编译项目报错：The SourceSet ‘instrumentTest’ is not recognized by the Android Gradle Plugin. 解决办法：gradle 配置，这里的配置中 instrumentTest 已被弃用，不适用于现在的 gradle 版本。用 androidTest 替换 instrumentTest，编译运行即可。 2.导入Eclipse 项目报错，Error:Could not determine the class-path for interface com.android.builder.model.AndroidProject. 解决办法：修改自己本地安装的 gradle 版本号，然后重新编译执行。 3.使用Retrofit进行网络请求（post）的时候，log打印日志：java.lang.IllegalArgumentException: @FieldMap parameters can only be used with form encoding. (parameter #1) 解决办法：当POST请求时，@FormUrlEncoded和@Field简单的表单键值对。两个需要结合使用，否则会报错；@Query请求参数。无论是GET或POST的参数都可以用它来实现 1234正确写法： @FormUrlEncoded @POST(forgetpwd) Observable&lt;ResponseBody&gt; forget(@FieldMap Map&lt;String, String&gt; map); 4.查看SHAR1值的办法。 解决办法： (1).把apk的格式改为压缩文件，进行解压。 (2).在解压出来的文件中获取META-INF文件夹下的CERT.RSA文件。 (3).打开cmd Keytool –printcert –file 后面接文件的路径。 5.Could not find com.android.tools.build:aapt2:3.2.1-4818971. 解决方法：在项目的build.gradle文件中，新增一行google()即可解决 123456allprojects &#123; repositories &#123; jcenter() google()//新增这一行 &#125;&#125; 6.AAPT2 error: check logs for details 解决办法：构建 App 的时候，打开 Build 窗口，点击 “Toggle View” 切换到文本输出。查看log具体输出原因 7.java.lang.UnsatisfiedLinkError: dlopen failed: library “/system/lib64/libweibosdkcore.so” needed or dlopened by “/system/lib64/libnativeloader.so” is not accessible for the namespace “classloader-namespace” 解决办法：根据错误提示，缺少对应的so文件，需要ctrl+shift+n找到so，并拷贝到jniLibs文件夹下，注意对应的文件位置。重新rebuild即可。 8.java.io.IOException: proguard.ParseException: Unexpected keyword ‘com.amap.api.mapcore.xx’ 解决办法： 1.检查关键字是否错误，keep class 等 2.检查包名是否拼写错误 3.检查是否有中文字符，比如括号，点，空格，空格，空格 9.给项目添加 Android 10 的网络权限。解决办法： 1.将如下代码，添加到xml文件中 1234&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;network-security-config&gt; &lt;base-config cleartextTrafficPermitted="true" /&gt;&lt;/network-security-config&gt; ​ 2.在application中引用xml文件即可。 10.Android 中 String 资源文件添加空格/空白格解决办法：Android 中字符串资源放置在 string.xml 文件中，并且该文件不能识别空格，但是在实际开发过程中需要用到空格，在需要设置的地方添加 &#160; 即可。 *11.Android XListView 在刷新数据是越界问题：java.lang.IndexOutOfBoundsException: Invalid index 1, size is 1 。 * 解决办法： ​ 1.不使用下拉刷新的headView, ​ 2.当adapter的数据被全部clean时,使用adapter.notifyDataSetInvalidated(); ​ 3.在加入新的数据后,使用adapter.notifyDataSetChanged(); 12.Didn’t find class “android.support.v4.content.FileProvider” on path: 解决办法： ​ 1.添加如下代码 123defaultConfig &#123; multiDexEnabled true&#125; ​ 2.在Application中重写 attachBaseContext() 方法 并初始化 MultiDex.install(this); 13.AndroidStudio无法连接模拟器。 解决办法： ​ 1.首先进入到 AndroidStudio 下的plateform-tools目录下 ​ 2.执行 adb connect 127.0.0.1：62001 ​ 3.出现 connected to 127.0.0.1:62001 则表示连接成功 *14.Android java.lang.RuntimeException: Parcelable encountered IOException writing serializable object * 解决办法： ​ 1.抛出java.io.NotSerializableException异常,抛出这个异常是因为你的对象没有实现Serializable接口，只要实现该接口就好了。 ​ 2.抛出java.lang.RuntimeException异常,抛出这个异常是因为传递的对象里面的对象也要实现Serializable接口。 15.Android.os.TransactionTooLargeException 异常解决 解决办法：Android 中进程中通过 binder 是通讯的数据载体，当序列化数据过大时，会出现该异常。 ​ 1.可以通过 EventBus 等替代方案来解决。 ​ 2.使用 getIntent().getSerializableExtra() 传递数据，数据量不宜过大。 16.java.lang.IllegalArgumentException: Both dimensions must be greater than 0 二维码扫描 解决办法：需要将 ZXApplication 添加到配置清单文件中 17.Error:Execution failed for task ‘:包路径:mergeReleaseResources’. 解决办法：本地包路径\src\main\res\values\attrs.xml: Error: Found item Attr/textColor more than one time 根据错误信息描述可以推测出 textColor 属性被多次声明, 可以去掉多余的或者是无用的信息. 18.Could not get unknown property ‘jnilibs’ for source set ‘main’ of type org.gradle.api.internal.tasks.DefaultSourceSet. 解决办法：jnilibs需要更改为：jniLibs， 添加如下代码： 12345sourceSets&#123; main&#123; jniLibs.srcDirs=['libs'] &#125;&#125; 19.android N 调用相机错误提示: android.os.FileUriExposedException: file:///storage/emulated/0/picture1551231656.jpg exposed beyond app through Intent.getData() 解决办法： ​ 1.调用相机 1234567891011121314// 启动拍照,并保存到临时文件Intent mIntent = new Intent();mIntent.setAction(MediaStore.ACTION_IMAGE_CAPTURE);int currentVersion = Build.VERSION.SDK_INT;if (currentVersion &lt; 24) &#123; mIntent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(mPictureFile)); startActivityForResult(mIntent, REQUEST_CAMERA_IMAGE);&#125; else &#123; ContentValues contentValues = new ContentValues(1); contentValues.put(MediaStore.Images.Media.DATA, mPictureFile.getAbsolutePath()); Uri uri = getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,contentValues); mIntent.putExtra(MediaStore.EXTRA_OUTPUT, uri); startActivityForResult(mIntent, REQUEST_CAMERA_IMAGE);&#125; ​ 2.获取图片 12345fileSrc = mPictureFile.getAbsolutePath();updateGallery(fileSrc);File file = new File(fileSrc);Uri uri = FileProvider.getUriForFile(this, getPackageName() + ".provider", file);FaceUtil.cropPicture(this, uri); 20.The number of method references in a .dex file cannot exceed 64K. 解决办法： ​ 1.在 dependencies 中添加如下代码 1compile 'com.android.support:multidex:1.0.1' ​ 2.在 defaultConfig 中添加如下代码 1multiDexEnabled true ​ 3.在 AndroidManifest.xml 中的 application 标签中添加 12android:name="android.support.multidex.MultiDexApplication"&gt;android:name="com.xxxx.xxxx.YourApplication"&gt; ​ 4.如果你的应用程序继承 Application , 那么你需要重写Application attachBaseContext方法 12345@Overrideprotected void attachBaseContext(Context base) &#123; super.attachBaseContext(base); MultiDex.install(this) ;&#125; 21.Android Studio中references to other resources are not supported by build-time PNG generation解决方案 解决办法：在 build.gradle 文件中添加以下代码 123defaultConfig &#123; vectorDrawables.useSupportLibrary = true&#125; 22.解决”No toolchains found in the NDK toolchains folder for ABI with prefix: mips64el-linux-android”错误 解决办法：NDK的更新记录里有下边一段话:This version of the NDK is incompatible with the Android Gradle plugin version 3.0 or older. If you see an error like toolchains found in the NDK toolchains folder for ABI with prefix: mips64el-linux-android,```123456789 update your project file to [use plugin version 3.1 or newer]. You will also need to upgrade to Android Studio 3.1 or newer.新版本的NDK与3.0及以前旧版的Android Gradle plugin插件不兼容```javadependencies &#123; classpath &apos;com.android.tools.build:gradle:3.2.0&apos; // 修改为你拥有的版本号即可&#125; *23.Annotation processors must be explicitly declared now. The following dependencies on the compile classpath are found to contain annotation processor. Please add them to the annotationProcessor configuration. * 解决办法：在项目的 build.gradle 文件中的 android 下的 defaultConfig 中添加如下代码，然后重新编译即可。 1javaCompileOptions.annotationProcessorOptions.includeCompileClasspath = true 24.java.util.concurrent.ExecutionException: com.android.builder.internal.aapt.v2.Aapt2Exception: Android resource compilation failed Output: E:\working space\GaoxinSafetyEnter\appclient\build\intermediates\incremental\mergeDebugResources\merged.dir\values\values.xml:932: error: inner element must either be a resource reference or empty. 解决办法：找到报错的目标文件的具体位置，打开全局搜索(Ctrl + Shift + F) Scope 查找资源文件的名称，然后修改即可。 25.Android TextView 显示后台返回的富文本内容 解决办法：使用 Html.fromHtml() ​ 1.定义富文本内容 1String content = "&lt;p style=\"padding: 0px; margin: 0px; color: rgb(43, 43, 43); font-family: 微软雅黑, 宋体, serif; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-style: initial; text-decoration-color: initial; text-indent: 2em;\"&gt;国家安全生产监督管理总局令&lt;\/p&gt;" ​ 2.使用 Html.fromHtml() 123CharSequence charSequence = Html.fromHtml(content);contentTxt.setText("内容:" + charSequence);contentTxt.setMovementMethod(LinkMovementMethod.getInstance()); 26.Android Activity 页面 Edittext 控件自动弹出软键盘的问题。（修改为使用时才弹出软键盘） 解决办法： ​ 1.在Edittext 控件上添加如下两个属性 12android:focusable="true"android:focusableInTouchMode="true" ​ 2.在配置清单文件中找到对应的 Activity 页面, 添加如下属性即可。 1android:windowSoftInputMode="adjustResize|stateHidden" 27.Could not find manifest-merger.jar (com.android.tools.build:manifest-merger:26.0.1). 解决办法：将 google() 和 jcenter() 换下位置，让它去 google 中下载 manifest-merger.jar 包，就可以编译通过. 28.布局报错：Error parsing XML: not well-formed (invalid token) 解决办法：首先确定布局文件编码是否为 utf-8 格式，其次是 xml 文件中不能出现 ‘&lt;’ ‘&gt;’ 等符号, 建议在代码中赋值. 29.Android P 提示 java.io.IOException: Cleartext HTTP traffic to XXX not permitted 解决办法：Android P的系统上面默认所有Http的请求都被阻止了。通过在AnroidManifestz.xml中的application显示设置： 1&lt;application android:usesCleartextTraffic="true"&gt; 30.Android P Android java.lang.NoClassDefFoundError: Failed resolution of: Lorg/apache/commons/logging/LogFactory 解决办法： ​ 1.添加 commons-logging-4.0.6 jar 到 libs 文件夹下并引用。 ​ 2.在AnroidManifest.xml中的application显示设置： 31.java.lang.NoClassDefFoundError: Failed resolution of: Lokio/Buffer 解决办法：缺少 Okio 的 Libs，添加进项目即可。 链接地址:https：//github.com/square/okio 1implementation ' com.squareup.okio：okio：2.2.2 ' 32.java.lang.RuntimeException: Parcelable encountered IOException writing serializable object (name = com.example.app.moudle.CheckAgainstStandard$ListBean) 解决办法：该实体类中存在部分类没有实现 serializable 接口，仔细检查，让所有的类都实现 serializable 接口即可。 33.Android studio Could not download guava.jar 解决办法：项目中没有用到 guava.jar 的相关东西，删除 .gradle 和 .idea 两个文件夹，重新 rebuild 即可。 34.java.lang.IllegalArgumentException: timeout too large. 解决办法：网络请求中超时时间过长导致的，一般情况下超时时间设置为 5s 就可以了。 35.java.lang.SecurityException: Need to declare android.permission.REQUEST_INSTALL_PACKAGES to call this api 解决办法：配置清单文件中缺少 REQUEST_INSTALL_PACKAGES 权限，添加即可。]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android问题</tag>
        <tag>汇总</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于 HEXO 的一些常用命令]]></title>
    <url>%2F2019%2F05%2F28%2F%E5%85%B3%E4%BA%8E%20hexo%20%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[由于电脑系统重装，之前的内容没有备份, 从2017年到2019年的内容靠自己之前整理的一些笔记还原了部分文章。不过目前已经重新将架子搭起来，准备继续搞起来！！！欢迎来到[Hexo]（https://hexo.io/）！ 这是你的第一篇文章。 有关详细信息，请查看[文档]（https://hexo.io/docs/）。 如果您在使用Hexo时遇到任何问题，可以在[故障排除]（https://hexo.io/docs/troubleshooting.html）中找到答案，或者您可以在[GitHub]（https://github.com）上找到我。/ hexojs/ HEXO/问题）。 ＃＃ 快速开始 ###创建一个新帖子 1$ hexo new“我的新帖子” 更多信息：[写作]（https://hexo.io/docs/writing.html） ###运行服务器 1$ hexo服务器 更多信息：[服务器]（https://hexo.io/docs/server.html） ###生成静态文件 1$ hexo生成 更多信息：[Generating]（https://hexo.io/docs/generating.html） ###部署到远程站点 1$ hexo deploy 更多信息：[部署]（https://hexo.io/docs/deployment.html）]]></content>
      <categories>
        <category>HEXO 的常用命令</category>
      </categories>
      <tags>
        <tag>hexo 的操作</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python 第三方包管理工具-Pip]]></title>
    <url>%2F2018%2F05%2F28%2FPython%20%E7%AC%AC%E4%B8%89%E6%96%B9%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-Pip%2F</url>
    <content type="text"><![CDATA[Pip 是Python 推荐的用于安装Python软件包的工具。首先简单说明一下 Pip 的用法。 1.安装包管理工具 2.升级包管理工具 3.安装第三方的模块 4.卸载第三方的模块 1、安装包管理工具 - pip 1sudo easy-install pip 2、升级包管理工具的版本 ​ Linux 或 Mac OS 上： pip install -U pip​ Windows 上： 1python -m pip install -U pip 3、使用包管理工具安装第三方的模块 ​ 举个简单的栗子，使用命令：pip3 install + 模块名。例如安装 PyMySQL 模块，则需要使用命令： pip3 install PyMySQL 4、使用包管理工具卸载模块 使用卸载模块命令即可对相应模块进行移除操作，命令：pip uninstall + 模块名。]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Pip</tag>
        <tag>包管理工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CantuseSubversioncommandlineclient 的解决方案]]></title>
    <url>%2F2018%2F05%2F08%2FCantuseSubversioncommandlineclient%20%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%2F</url>
    <content type="text"><![CDATA[由于项目在 iPhone X 上出现异常，要对 Xcode 进行9.3版本的更新时，发现也需要对 Mac OS 升级为 10.13.4，不然会出现不兼容的情况，谁叫人家是大哥呢？ 作为一名程序猿，不升级怎么修复 Bug？！ 经过漫长的等待，终于更新好了，咦，Finder 怎么编成“访达”，当然还有其他的一些变化，这是 Apple 在汉语化的结果。真是受不了这翻译，果断切换为英文版。好了废话不多说，当我兴冲冲的打开 Xcode，准备提交更改的代码时候，直接弹出 Can’t use Subversion command line client: svn Probably the path to Subversion executable is wrong. Fix it. 错误。 当出现这个问题的时候，不管你的Mac上边安装的什么IDE，提交SVN的时候都会报 Can’t use Subversion command line client: svn Probably the path to Subversion executable is wrong. Fix it. 错误。下边我贴出的Android Studio的错误信息。 首先来说一下 Windows 下的解决方法：Windows 下的这个错误比较容易解决，重新安装一下SVN，勾选一下 Command line client tools 这个选项，最后在IDE中设置一下 SVN 的相关路径即可。作为一个 Mac 新手，这个问题还是比较棘手，从错误信息来看，是缺少相关的工具。 解决办法： 123打开 Terminal 输入 xcode-select --install ,大概等待2分钟左右安装 Xcode 插件。等待安装完成之后，你就可以开心的提交代码。xcode-select --install 在此记录一下遇到的问题，希望给遇到同样问题的小伙伴一点参考。]]></content>
      <categories>
        <category>CantuseSubversioncommandlineclient</category>
      </categories>
      <tags>
        <tag>Xcode</tag>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python 中字符串的相关用法]]></title>
    <url>%2F2018%2F04%2F02%2FPython%20%E4%B8%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E7%9B%B8%E5%85%B3%E7%94%A8%E6%B3%95%2F</url>
    <content type="text"><![CDATA[本篇文章主要记录一下Python中关于字符串的相关操作，一来是为了自己加深记忆，二来是方便后期查找起来比较快速。 1、拼接字符串 2、字符串复制 3、字符串长度 4、字符串大小写转换(如果不进行重新赋值操作，原数据是不会发生变化的) 5、给字符串编号(从左到右是是从0开始) 6、字符串截取 7、去掉字符串的空格 1、拼接字符串1.1、使用 + 来拼接，只能操作相同类型12345a = "正在学习"b = "Python"c = a + bprint(c) # 正在学习Python 1.2、使用占位符来拼接字符串1234a = 'Py'b = 'thon'print('%s%s' % (a, b)) # Python 2、字符串复制2.1、使用等号进行字符串的复制12345a = 'copy string...'print(a) # result:copystring...b = aprint(b) # result:copy string... 3、字符串长度使用len()函数获取字符串的长度1234A = 'copy string...'print(A) # result:copy string...print(len(A)) # result:14 4、字符串大小写转换(如果不进行重新赋值操作，原数据是不会发生变化的)4.1、将小写转换成大写1234567a = 'copy, python'a.upper() # 将小写完全变成大写print(a) # result:'COPY, PYTHON'print(a) # result:'copy, python' # 原数据没有改变b = a.upper() # 进行重新赋值，就会发生变化print(b) # result:'COPY, PYTHON' 4.2、将大写转换成小写12c = b.lower()print(c) # result:'copy, python' 4.3、只改变首字符的大小写123456789print(a) # result:'copy, python'a.capitalize() # 改变首字母为大写print(a) # result:'Copy, python'print(a) # result:'copy, python'b = a.capitalize()print(a) # result:'Copy, python'print(b) # result:'copy, python' 4.4、判断首字母是否是大写(不含有逗号，且首字母大写的情况才是正确)12345678a = 'Hello, python' # 含有逗号的情况,直接返回 False。第一个是大写，第二个是小写print(a.istitle()) # result:Falsea = 'Hello, Python'print(a.istitle()) # result:Truea = 'HelloPython'print(a.istitle()) # result:True 4.5、判断字符串是否都是大写1234567a = 'HelloPython'print(a.isupper()) # result:Falseprint(a.upper().isupper()) # result:Truea = 'Hello,Python'print(a.islower()) # result:Falseprint(a.lower().islower()) # result:True 5、给字符串编号(从左到右是是从0开始)123456a = 'Hello, World!'print(len(a)) # result:13print(a[0]) # result:'H'print(a[9]) # result:'r'print(a[-1]) # 从右到左是从-1开始的 result:'!' 6、字符串截取12345a = 'Hello,World'print(a[2:5]) # 从a开始到b结束 result:'llo'print(a[3:]) # 从a开始，截取到结束 # 'lo,World'print(a[:5]) # 从开始位置截取到b位置 # result:'Hello,' 7、去掉字符串的空格123456a = ' Hello 'print(a.strip()) # 去掉前后的空格 # result:'Hello'print(a) # result:' Hello 'print(b.lstrip()) # 去掉前面的空格 # result:'Hello 'print(b.rstrip()) # 去掉后面的空格 # result:' Hello']]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>python字符串</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android 6.0 权限]]></title>
    <url>%2F2017%2F05%2F24%2FAndroid%206.0%20%E6%9D%83%E9%99%90%2F</url>
    <content type="text"><![CDATA[​ 对于开发者来说，Android应用权限这个词语应该都不会陌生，但是Android 6.0之后，Google做了一些调整： 6.0以前的版本，设置应用权限只要在Manifest清单文件声明相应的权限即可，系统会在用户安装应用的时候告知用户该应用会获取哪些权限，并且会授权声明在配置清单文件的权限。 6.0以后版本（包括6.0），应用在运行时向用户请求权限，用户可以随时调用权限，所以说应用运行时需要检查权限是否授权。 ​ 系统权限分为：正常权限和危险权限，声明在清单文件中的正常权限在应用安装时，直接被授权通过；危险权限需要用户确认授权应用才能获得相应权限，否则相应的功能将不能正常使用。所有的Android危险权限都属于权限组，下边列出开发者官网上的危险权限组和危险权限： ​ 当应用在清单文件中声明以上任意权限，应用在运行的时候，首先会判断该权限是否获得用户的授权，如果获得用户的授权，涉及该权限的功能可以正常使用；反之，未获得用户授权，需要重新向用户请求授权，授权以弹出框的形式展现出来，弹出框告知用户应用内获得哪些权限，由用户选择授权或者是取消授权。换句话说：6.0之后的系统版本，用农户对应用内的权限有更高的控制权。 好了，言归正传，下边举个简单的栗子来说明一下。 步骤一：在清单文件中声明需要用到的权限 步骤二：在布局文件中添加并在代码中初始化Button，点击Button获取清单文件中声明的权限 ![判断是否授权并请求权限](E:\HEXO\themes\next\source\images\判断是否授权并请求权限 .jpg) 分析：首先判断用户是否已经授权，如果已经授权，则直接调用call（）方法；反之，重新使用ActivityCompat.requestPermissions（）向用户请求权限，然后回掉方法中判断请求结果，用户通过授权，则调用Call（）方法；否则吐司提示用户拒绝授权。 最后贴上运行结果图 ![运行结果](E:\HEXO\themes\next\source\images\运行结果 .jpg)]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android 6.0 权限</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[获取 AndroidStudio 的 Share1 值]]></title>
    <url>%2F2016%2F08%2F08%2F%E8%8E%B7%E5%8F%96%20AndroidStudio%20%E7%9A%84%20Share1%20%E5%80%BC%2F</url>
    <content type="text"><![CDATA[这个周末没事，准备做个BaiduMap比较全面的Demo，之前使用Ecplise比较方便，直接复制粘贴就行。但是AndroidStudio获取比较麻烦，刚开始我是一头雾水，不过最终还是研究出来了，记录一下，希望避过我踩过的坑。 步骤： 1、打开AndroidStudio的Terminal。 2、输入keytool -list -keystore D:\Soft\JDK1.8\MyJks.jks 这里需要注意的是：必须是在你存放的JKS文件路径才可以。 3、输入口令，正确之后就可以看到Share1的值 ![显示Share1值 ](/images/显示Share1值 .jpg) 到这里，Share1的值就获取到了，直接复制使用就OK。]]></content>
      <categories>
        <category>AndroidStudio</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>AndroidStudio</tag>
        <tag>Share1值</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于友盟的第三方登录、分享的流程实现]]></title>
    <url>%2F2016%2F05%2F24%2F%E5%85%B3%E4%BA%8E%E5%8F%8B%E7%9B%9F%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E5%BD%95%E3%80%81%E5%88%86%E4%BA%AB%E7%9A%84%E6%B5%81%E7%A8%8B%E5%AE%9E%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[现在几乎每款APP都有登陆、分享这些功能，正好最想项目中需要用到。因此记录一下实现的流程。此片博文主要是关于友盟的登陆分享的实现流程。 首先呢，友盟支持的第三方登录平台：新浪微博、腾讯微博、QQ、QQ空间、微信、人人网； 其次呢，友盟支持的第三方的分享平台： 国内的平台：微信（微信好友及微信朋友圈）、QQ、QQ空间、新浪微博、腾讯微博、人人网、支付宝、豆瓣、印象笔记、有道云笔记、来往、易信等。 国外的平台：Facebook、Twitter、Google+、KaKao、Instagram、WhatsApp、Line、EverNote、Pocket、Pinterest、Linkedin、G+等。 （Ps：可能会有人说我根本用不了那么多的平台，其实呢，你只需要在集成SDK的时候，将你需要使用的平台集成进去就好了） 友盟账号注册，添加应用，获取AppKey等这些我就不再这里多说了，因为我相信大家都是老司机，轻车熟路。但是下载SDK的时候，只需要下载自己将用到的东西就OK。 最后呢，就是那个集成流程： 在Manifest中添加友盟的权限，AppKey，登陆分享的组件。 添加jar和资源文件。 在代码中设置要分享的内容和制定分享平台。 在指定的各个平台申请账号，添加应用。 注：官方的文档是比较详细的，具体请戳这里：[http://dev.umeng.com/social/android/sdk-download?spm=0.0.0.0.g0iA18](]]></content>
      <categories>
        <category>友盟，第三方登录、分享</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
</search>
