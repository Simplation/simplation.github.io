<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>关于友盟的第三方登录、分享的流程实现</title>
      <link href="/2019/06/11/%E5%85%B3%E4%BA%8E%E5%8F%8B%E7%9B%9F%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E5%BD%95%E3%80%81%E5%88%86%E4%BA%AB%E7%9A%84%E6%B5%81%E7%A8%8B%E5%AE%9E%E7%8E%B0/"/>
      <url>/2019/06/11/%E5%85%B3%E4%BA%8E%E5%8F%8B%E7%9B%9F%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E5%BD%95%E3%80%81%E5%88%86%E4%BA%AB%E7%9A%84%E6%B5%81%E7%A8%8B%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>​        现在几乎每款APP都有登陆、分享这些功能，正好最想项目中需要用到。因此记录一下实现的流程。此片博文主要是关于友盟的登陆分享的实现流程。</p><p>​        首先呢，友盟支持的第三方登录平台：新浪微博、腾讯微博、QQ、QQ空间、微信、人人网；</p><p>​        其次呢，友盟支持的第三方的分享平台：</p><p>​        国内的平台：微信（微信好友及微信朋友圈）、QQ、QQ空间、新浪微博、腾讯微博、人人网、支付宝、豆瓣、印象笔记、有道云笔记、来往、易信等等。</p><p>​         国外的平台：Facebook、Twitter、Google+、KaKao、Instagram、WhatsApp、Line、EverNote、Pocket、Pinterest、Linkedin、G+等。</p><p>​        （Ps：可能会有人说我根本用不了那么多的平台，其实呢，你只需要在集成SDK的时候，将你需要使用的平台集成进去就好了）</p><p>​        友盟账号注册，添加应用，获取AppKey等这些我就不再这里多说了，因为我相信大家都是老司机，轻车熟路。但是下载SDK的时候，只需要下载自己将用到的东西就OK。</p><p>​        最后呢，就是那个集成流程：</p><ul><li>在Manifest中添加友盟的权限，AppKey，登陆分享的组件。</li><li>添加jar和资源文件。</li><li>在代码中设置要分享的内容和制定分享平台。</li><li>在指定的各个平台申请账号，添加应用。</li></ul><p>注：官方的文档是比较详细的，具体请戳这里：[<a href="http://dev.umeng.com/social/android/sdk-download?spm=0.0.0.0.g0iA18]" target="_blank" rel="noopener">http://dev.umeng.com/social/android/sdk-download?spm=0.0.0.0.g0iA18]</a>(</p>]]></content>
      
      
      <categories>
          
          <category> 友盟，第三方登录、分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 中字符串的相关用法</title>
      <link href="/2019/06/06/Python%20%E4%B8%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E7%9B%B8%E5%85%B3%E7%94%A8%E6%B3%95/"/>
      <url>/2019/06/06/Python%20%E4%B8%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E7%9B%B8%E5%85%B3%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>本篇文章主要记录一下Python中关于字符串的相关操作，一来是为了自己加深记忆，二来是方便后期查找起来比较快速。</p><ul><li><p>1、拼接字符串</p></li><li><p>2、字符串复制</p></li><li><p>3、字符串长度</p></li><li><p>4、字符串大小写转换(如果不进行重新赋值操作，原数据是不会发生变化的)</p></li><li><p>5、给字符串编号(从左到右是是从0开始)</p></li><li><p>6、字符串截取 </p></li><li><p>7、去掉字符串的空格</p></li></ul><h4 id="1、拼接字符串"><a href="#1、拼接字符串" class="headerlink" title="1、拼接字符串"></a>1、拼接字符串</h4><h5 id="1-1、使用-来拼接，只能操作相同类型"><a href="#1-1、使用-来拼接，只能操作相同类型" class="headerlink" title="1.1、使用 + 来拼接，只能操作相同类型"></a>1.1、使用 + 来拼接，只能操作相同类型</h5><pre><code>a = &quot;正在学习&quot;b = &quot;Python&quot;c = a + bprint(c)    # 正在学习Python</code></pre><h5 id="1-2、使用占位符来拼接字符串"><a href="#1-2、使用占位符来拼接字符串" class="headerlink" title="1.2、使用占位符来拼接字符串"></a>1.2、使用占位符来拼接字符串</h5><pre><code>a = &apos;Py&apos;b = &apos;thon&apos;print(&apos;%s%s&apos; % (a, b))    # Python</code></pre><h4 id="2、字符串复制"><a href="#2、字符串复制" class="headerlink" title="2、字符串复制"></a>2、字符串复制</h4><h5 id="2-1、使用等号进行字符串的复制"><a href="#2-1、使用等号进行字符串的复制" class="headerlink" title="2.1、使用等号进行字符串的复制"></a>2.1、使用等号进行字符串的复制</h5><pre><code>a = &apos;copy string...&apos;print(a)        # result:copystring...b = aprint(b)        # result:copy string...</code></pre><h4 id="3、字符串长度"><a href="#3、字符串长度" class="headerlink" title="3、字符串长度"></a>3、字符串长度</h4><h5 id="使用len-函数获取字符串的长度"><a href="#使用len-函数获取字符串的长度" class="headerlink" title="使用len()函数获取字符串的长度"></a>使用len()函数获取字符串的长度</h5><pre><code>A = &apos;copy string...&apos;print(A)        # result:copy string...print(len(A))   # result:14</code></pre><h4 id="4、字符串大小写转换-如果不进行重新赋值操作，原数据是不会发生变化的"><a href="#4、字符串大小写转换-如果不进行重新赋值操作，原数据是不会发生变化的" class="headerlink" title="4、字符串大小写转换(如果不进行重新赋值操作，原数据是不会发生变化的)"></a>4、字符串大小写转换(如果不进行重新赋值操作，原数据是不会发生变化的)</h4><h5 id="4-1、将小写转换成大写"><a href="#4-1、将小写转换成大写" class="headerlink" title="4.1、将小写转换成大写"></a>4.1、将小写转换成大写</h5><pre><code>a = &apos;copy, python&apos;a.upper()  # 将小写完全变成大写print(a)   # result:&apos;COPY, PYTHON&apos;print(a)   # result:&apos;copy, python&apos;  # 原数据没有改变b = a.upper()  # 进行重新赋值，就会发生变化print(b)   # result:&apos;COPY, PYTHON&apos;</code></pre><h5 id="4-2、将大写转换成小写"><a href="#4-2、将大写转换成小写" class="headerlink" title="4.2、将大写转换成小写"></a>4.2、将大写转换成小写</h5><pre><code>c = b.lower()print(c)   # result:&apos;copy, python&apos;</code></pre><h5 id="4-3、只改变首字符的大小写"><a href="#4-3、只改变首字符的大小写" class="headerlink" title="4.3、只改变首字符的大小写"></a>4.3、只改变首字符的大小写</h5><pre><code>print(a)   # result:&apos;copy, python&apos;a.capitalize()  # 改变首字母为大写print(a)   # result:&apos;Copy, python&apos;print(a)   # result:&apos;copy, python&apos;b = a.capitalize()print(a)   # result:&apos;Copy, python&apos;print(b)   # result:&apos;copy, python&apos;</code></pre><h4 id="4-4、判断首字母是否是大写-不含有逗号，且首字母大写的情况才是正确"><a href="#4-4、判断首字母是否是大写-不含有逗号，且首字母大写的情况才是正确" class="headerlink" title="4.4、判断首字母是否是大写(不含有逗号，且首字母大写的情况才是正确)"></a>4.4、判断首字母是否是大写(不含有逗号，且首字母大写的情况才是正确)</h4><pre><code>a = &apos;Hello, python&apos;  # 含有逗号的情况,直接返回 False。第一个是大写，第二个是小写print(a.istitle())   # result:Falsea = &apos;Hello, Python&apos;print(a.istitle())   # result:Truea = &apos;HelloPython&apos;print(a.istitle())   # result:True</code></pre><h5 id="4-5、判断字符串是否都是大写"><a href="#4-5、判断字符串是否都是大写" class="headerlink" title="4.5、判断字符串是否都是大写"></a>4.5、判断字符串是否都是大写</h5><pre><code>a = &apos;HelloPython&apos;print(a.isupper())   # result:Falseprint(a.upper().isupper())  # result:Truea = &apos;Hello,Python&apos;print(a.islower())   # result:Falseprint(a.lower().islower())   # result:True</code></pre><h4 id="5、给字符串编号-从左到右是是从0开始"><a href="#5、给字符串编号-从左到右是是从0开始" class="headerlink" title="5、给字符串编号(从左到右是是从0开始)"></a>5、给字符串编号(从左到右是是从0开始)</h4><pre><code>a = &apos;Hello, World!&apos;print(len(a)) # result:13print(a[0])   # result:&apos;H&apos;print(a[9])   # result:&apos;r&apos;print(a[-1])  # 从右到左是从-1开始的   result:&apos;!&apos;</code></pre><h4 id="6、字符串截取"><a href="#6、字符串截取" class="headerlink" title="6、字符串截取"></a>6、字符串截取</h4><pre><code>a = &apos;Hello,World&apos;print(a[2:5])  # 从a开始到b结束    result:&apos;llo&apos;print(a[3:])   # 从a开始，截取到结束      # &apos;lo,World&apos;print(a[:5])   # 从开始位置截取到b位置    # result:&apos;Hello,&apos;</code></pre><h4 id="7、去掉字符串的空格"><a href="#7、去掉字符串的空格" class="headerlink" title="7、去掉字符串的空格"></a>7、去掉字符串的空格</h4><pre><code>a = &apos; Hello &apos;print(a.strip())   # 去掉前后的空格    # result:&apos;Hello&apos;print(a)           # result:&apos; Hello &apos;print(b.lstrip())  # 去掉前面的空格    # result:&apos;Hello &apos;print(b.rstrip())  # 去掉后面的空格    # result:&apos; Hello&apos;</code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 第三方包管理工具-Pip</title>
      <link href="/2019/06/05/Python%20%E7%AC%AC%E4%B8%89%E6%96%B9%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-Pip/"/>
      <url>/2019/06/05/Python%20%E7%AC%AC%E4%B8%89%E6%96%B9%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-Pip/</url>
      
        <content type="html"><![CDATA[<p>Pip 是Python 推荐的用于安装Python软件包的工具。首先简单说明一下  Pip 的用法。</p><ul><li>1.安装包管理工具</li><li>2.升级包管理工具</li><li>3.安装第三方的模块</li><li>4.卸载第三方的模块</li></ul><p>1、安装包管理工具 - pip</p><p>​        sudo easy-install pip</p><p>2、升级包管理工具的版本</p><p>​    Linux 或 Mac OS 上：</p><pre><code>pip install -U pip</code></pre><p>​    Windows 上：</p><p>​        python -m pip install -U pip</p><p>3、使用包管理工具安装第三方的模块</p><p>​    举个简单的栗子，使用命令：pip3 install + 模块名。例如安装 PyMySQL 模块，则需要使用命令：</p><pre><code>pip3 install PyMySQL</code></pre><p><img src="/images/%E6%BC%94%E7%A4%BA%E5%AE%89%E8%A3%85PyMySQL.png" alt="演示安装PyMySQL"></p><p>4、使用包管理工具卸载模块</p><p>使用卸载模块命令即可对相应模块进行移除操作，命令：pip uninstall + 模块名。</p><p><img src="/images/%E5%8D%B8%E8%BD%BD%E6%A8%A1%E5%9D%97.png" alt="卸载模块"></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pip </tag>
            
            <tag> 包管理工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 中常见问题汇总(附解决办法)</title>
      <link href="/2019/06/04/Android%20%E4%B8%AD%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
      <url>/2019/06/04/Android%20%E4%B8%AD%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>本片博文主要介绍的是自己在日常工作中遇到的一些问题，在此统一做一个汇总，希望能后帮到大家。</p><ul><li>1.Android Studio 编译项目报错：The SourceSet ‘instrumentTest’ is not recognized by the Android Gradle Plugin.</li><li>2.导入Eclipse项目报错，Error:Could not determine the class-path for interface com.android.builder.model.AndroidProject.</li><li>3.使用Retrofit进行网络请求（post）的时候，log打印日志：java.lang.IllegalArgumentException: @FieldMap parameters can only be used with form encoding. (parameter #1)</li><li>4.查看SHAR1值的方法</li><li>5.Could not find com.android.tools.build:aapt2:3.2.1-4818971.</li><li>6.AAPT2 error: check logs for details</li><li>7.java.lang.UnsatisfiedLinkError: dlopen failed: library “/system/lib64/libweibosdkcore.so” needed or dlopened by “/system/lib64/libnativeloader.so” is not accessible for the namespace “classloader-namespace”</li><li>8.java.io.IOException: proguard.ParseException: Unexpected keyword ‘com.amap.api.mapcore.xx’</li><li>9.给项目添加 Android 10 的网络权限。</li></ul><hr><p><strong>1.Android Studio 编译项目报错：The SourceSet ‘instrumentTest’ is not recognized by the Android Gradle Plugin.</strong></p><p>解决办法：gradle 配置，这里的配置中 instrumentTest 已被弃用，不适用于现在的 gradle 版本。用 androidTest 替换 instrumentTest，编译运行即可。</p><p><strong>2.导入Eclipse 项目报错，Error:Could not determine the class-path for interface com.android.builder.model.AndroidProject.</strong></p><p>解决办法：修改自己本地安装的 gradle 版本号，然后重新编译执行。</p><p><strong>3.使用Retrofit进行网络请求（post）的时候，log打印日志：java.lang.IllegalArgumentException: @FieldMap parameters can only be used with form encoding. (parameter #1)</strong></p><p>解决办法：当POST请求时，@FormUrlEncoded和@Field简单的表单键值对。两个需要结合使用，否则会报错；@Query请求参数。无论是GET或POST的参数都可以用它来实现 </p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">正确写法：</span><br><span class="line"><span class="variable">@FormUrlEncoded</span></span><br><span class="line"><span class="variable">@POST</span>(forgetpwd)</span><br><span class="line">Observable&lt;ResponseBody&gt; forget(<span class="variable">@FieldMap</span> Map&lt;String, String&gt; map);</span><br></pre></td></tr></table></figure><p><strong>4.查看SHAR1值的办法。</strong></p><p>解决办法：<br>    (1).把apk的格式改为压缩文件，进行解压。<br>    (2).在解压出来的文件中获取META-INF文件夹下的CERT.RSA文件。<br>    (3).打开cmd Keytool –printcert –file 后面接文件的路径。 </p><p><strong>5.Could not find com.android.tools.build:aapt2:3.2.1-4818971.</strong></p><p>解决方法：在项目的build.gradle文件中，新增一行google()即可解决</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">allprojects </span>&#123;</span><br><span class="line"><span class="class">repositories </span>&#123;</span><br><span class="line">   jcenter()</span><br><span class="line">   google()<span class="comment">//新增这一行</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>6.AAPT2 error: check logs for details</strong></p><p>解决办法：构建 App 的时候，打开 Build 窗口，点击 “Toggle View” 切换到文本输出。查看log具体输出原因</p><p><strong>7.java.lang.UnsatisfiedLinkError: dlopen failed: library “/system/lib64/libweibosdkcore.so” needed or dlopened by “/system/lib64/libnativeloader.so” is not accessible for the namespace “classloader-namespace”</strong></p><p>解决办法：根据错误提示，缺少对应的so文件，需要ctrl+shift+n找到so，并拷贝到jniLibs文件夹下，注意对应的文件位置。重新rebuild即可。</p><p><strong>8.java.io.IOException: proguard.ParseException: Unexpected keyword ‘com.amap.api.mapcore.xx’</strong></p><p>解决办法：<br>    1.检查关键字是否错误，keep class 等<br>    2.检查包名是否拼写错误<br>    3.检查是否有中文字符，比如括号，点，空格，空格，空格</p><p><strong>9.给项目添加 Android 10 的网络权限。</strong><br>解决办法：<br>    1.将如下代码，添加到xml文件中     </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">network-security-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">base-config</span> <span class="attr">cleartextTrafficPermitted</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">network-security-config</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​     2.在application中引用xml文件即可。        </p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android问题 </tag>
            
            <tag> 汇总 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取 AndroidStudio 的 Share1 值</title>
      <link href="/2019/06/03/%E8%8E%B7%E5%8F%96%20AndroidStudio%20%E7%9A%84%20Share1%20%E5%80%BC/"/>
      <url>/2019/06/03/%E8%8E%B7%E5%8F%96%20AndroidStudio%20%E7%9A%84%20Share1%20%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<p>这个周末没事，准备做个BaiduMap比较全面的Demo，之前使用Ecplise比较方便，直接复制粘贴就行。但是AndroidStudio获取比较麻烦，刚开始我是一头雾水，不过最终还是研究出来了，记录一下，希望避过我踩过的坑。</p><p>步骤：</p><ul><li>1、打开AndroidStudio的Terminal。</li></ul><p><img src="/images/%E6%89%93%E5%BC%80Terional.jpg" alt="打开Terional"></p><ul><li>2、输入keytool -list -keystore D:\Soft\JDK1.8\MyJks.jks        这里需要注意的是：必须是在你存放的JKS文件路径才可以。</li></ul><p><img src="/images/%E8%BE%93%E5%85%A5%E6%8C%87%E4%BB%A4.jpg" alt="输入指令"></p><ul><li>3、输入口令，正确之后就可以看到Share1的值</li></ul><p>![显示Share1值﻿](/images/显示Share1值﻿.jpg)</p><p>到这里，Share1的值就获取到了，直接复制使用就OK。</p>]]></content>
      
      
      <categories>
          
          <category> AndroidStudio </category>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AndroidStudio </tag>
            
            <tag> Share1值 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于 HEXO 的一些常用命令</title>
      <link href="/2019/05/28/%E5%85%B3%E4%BA%8E%20hexo%20%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/05/28/%E5%85%B3%E4%BA%8E%20hexo%20%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>由于电脑系统重装，之前的内容没有备份, 从2017年到2019年的内容都不复存在。不过目前已经重新将架子搭起来，准备继续搞起来！！！<br>欢迎来到[Hexo]（<a href="https://hexo.io/）！" target="_blank" rel="noopener">https://hexo.io/）！</a> 这是你的第一篇文章。 有关详细信息，请查看[文档]（<a href="https://hexo.io/docs/）。" target="_blank" rel="noopener">https://hexo.io/docs/）。</a> 如果您在使用Hexo时遇到任何问题，可以在[故障排除]（<a href="https://hexo.io/docs/troubleshooting.html）中找到答案，或者您可以在[GitHub]（https://github.com）上找到我。/" target="_blank" rel="noopener">https://hexo.io/docs/troubleshooting.html）中找到答案，或者您可以在[GitHub]（https://github.com）上找到我。/</a> hexojs/ HEXO/问题）。</p><p>＃＃ 快速开始</p><p>###创建一个新帖子</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new“我的新帖子”</span><br></pre></td></tr></table></figure><p>更多信息：[写作]（<a href="https://hexo.io/docs/writing.html）" target="_blank" rel="noopener">https://hexo.io/docs/writing.html）</a></p><p>###运行服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo服务器</span><br></pre></td></tr></table></figure><p>更多信息：[服务器]（<a href="https://hexo.io/docs/server.html）" target="_blank" rel="noopener">https://hexo.io/docs/server.html）</a></p><p>###生成静态文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo生成</span><br></pre></td></tr></table></figure><p>更多信息：[Generating]（<a href="https://hexo.io/docs/generating.html）" target="_blank" rel="noopener">https://hexo.io/docs/generating.html）</a></p><p>###部署到远程站点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>更多信息：[部署]（<a href="https://hexo.io/docs/deployment.html）" target="_blank" rel="noopener">https://hexo.io/docs/deployment.html）</a></p>]]></content>
      
      
      <categories>
          
          <category> HEXO 的常用命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo 的操作 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
