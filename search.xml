<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[关于友盟的第三方登录、分享的流程实现]]></title>
    <url>%2F2019%2F06%2F11%2F%E5%85%B3%E4%BA%8E%E5%8F%8B%E7%9B%9F%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E5%BD%95%E3%80%81%E5%88%86%E4%BA%AB%E7%9A%84%E6%B5%81%E7%A8%8B%E5%AE%9E%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[关于友盟的第三方登录、分享的流程实现​ 现在几乎每款APP都有登陆、分享这些功能，正好最想项目中需要用到。因此记录一下实现的流程。此片博文主要是关于友盟的登陆分享的实现流程。 ​ 首先呢，友盟支持的第三方登录平台：新浪微博、腾讯微博、QQ、QQ空间、微信、人人网； ​ 其次呢，友盟支持的第三方的分享平台： ​ 国内的平台：微信（微信好友及微信朋友圈）、QQ、QQ空间、新浪微博、腾讯微博、人人网、支付宝、豆瓣、印象笔记、有道云笔记、来往、易信等等。 ​ 国外的平台：Facebook、Twitter、Google+、KaKao、Instagram、WhatsApp、Line、EverNote、Pocket、Pinterest、Linkedin、G+等。 ​ （Ps：可能会有人说我根本用不了那么多的平台，其实呢，你只需要在集成SDK的时候，将你需要使用的平台集成进去就好了） ​ 友盟账号注册，添加应用，获取AppKey等这些我就不再这里多说了，因为我相信大家都是老司机，轻车熟路。但是下载SDK的时候，只需要下载自己将用到的东西就OK。 ​ 最后呢，就是那个集成流程： 在Manifest中添加友盟的权限，AppKey，登陆分享的组件。 添加jar和资源文件。 在代码中设置要分享的内容和制定分享平台。 在指定的各个平台申请账号，添加应用。 注：官方的文档是比较详细的，具体请戳这里：[http://dev.umeng.com/social/android/sdk-download?spm=0.0.0.0.g0iA18](]]></content>
      <categories>
        <category>友盟，第三方登录、分享</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python 中字符串的相关用法]]></title>
    <url>%2F2019%2F06%2F06%2FPython%20%E4%B8%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E7%9B%B8%E5%85%B3%E7%94%A8%E6%B3%95%2F</url>
    <content type="text"><![CDATA[本篇文章主要记录一下Python中关于字符串的相关操作，一来是为了自己加深记忆，二来是方便后期查找起来比较快速。 1、拼接字符串 2、字符串复制 3、字符串长度 4、字符串大小写转换(如果不进行重新赋值操作，原数据是不会发生变化的) 5、给字符串编号(从左到右是是从0开始) 6、字符串截取 7、去掉字符串的空格 1、拼接字符串1.1、使用 + 来拼接，只能操作相同类型a = &quot;正在学习&quot; b = &quot;Python&quot; c = a + b print(c) # 正在学习Python1.2、使用占位符来拼接字符串a = &apos;Py&apos; b = &apos;thon&apos; print(&apos;%s%s&apos; % (a, b)) # Python2、字符串复制2.1、使用等号进行字符串的复制a = &apos;copy string...&apos; print(a) # result:copystring... b = a print(b) # result:copy string...3、字符串长度使用len()函数获取字符串的长度A = &apos;copy string...&apos; print(A) # result:copy string... print(len(A)) # result:144、字符串大小写转换(如果不进行重新赋值操作，原数据是不会发生变化的)4.1、将小写转换成大写a = &apos;copy, python&apos; a.upper() # 将小写完全变成大写 print(a) # result:&apos;COPY, PYTHON&apos; print(a) # result:&apos;copy, python&apos; # 原数据没有改变 b = a.upper() # 进行重新赋值，就会发生变化 print(b) # result:&apos;COPY, PYTHON&apos;4.2、将大写转换成小写c = b.lower() print(c) # result:&apos;copy, python&apos;4.3、只改变首字符的大小写print(a) # result:&apos;copy, python&apos; a.capitalize() # 改变首字母为大写 print(a) # result:&apos;Copy, python&apos; print(a) # result:&apos;copy, python&apos; b = a.capitalize() print(a) # result:&apos;Copy, python&apos; print(b) # result:&apos;copy, python&apos;4.4、判断首字母是否是大写(不含有逗号，且首字母大写的情况才是正确)a = &apos;Hello, python&apos; # 含有逗号的情况,直接返回 False。第一个是大写，第二个是小写 print(a.istitle()) # result:False a = &apos;Hello, Python&apos; print(a.istitle()) # result:True a = &apos;HelloPython&apos; print(a.istitle()) # result:True4.5、判断字符串是否都是大写a = &apos;HelloPython&apos; print(a.isupper()) # result:False print(a.upper().isupper()) # result:True a = &apos;Hello,Python&apos; print(a.islower()) # result:False print(a.lower().islower()) # result:True5、给字符串编号(从左到右是是从0开始)a = &apos;Hello, World!&apos; print(len(a)) # result:13 print(a[0]) # result:&apos;H&apos; print(a[9]) # result:&apos;r&apos; print(a[-1]) # 从右到左是从-1开始的 result:&apos;!&apos;6、字符串截取a = &apos;Hello,World&apos; print(a[2:5]) # 从a开始到b结束 result:&apos;llo&apos; print(a[3:]) # 从a开始，截取到结束 # &apos;lo,World&apos; print(a[:5]) # 从开始位置截取到b位置 # result:&apos;Hello,&apos;7、去掉字符串的空格a = &apos; Hello &apos; print(a.strip()) # 去掉前后的空格 # result:&apos;Hello&apos; print(a) # result:&apos; Hello &apos; print(b.lstrip()) # 去掉前面的空格 # result:&apos;Hello &apos; print(b.rstrip()) # 去掉后面的空格 # result:&apos; Hello&apos;]]></content>
      <tags>
        <tag>python字符串</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python 第三方包管理工具-Pip]]></title>
    <url>%2F2019%2F06%2F05%2FPython%20%E7%AC%AC%E4%B8%89%E6%96%B9%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-Pip%2F</url>
    <content type="text"><![CDATA[Pip 是Python 推荐的用于安装Python软件包的工具。首先简单说明一下 Pip 的用法。 1.安装包管理工具 2.升级包管理工具 3.安装第三方的模块 4.卸载第三方的模块 1、安装包管理工具 - pip ​ sudo easy-install pip 2、升级包管理工具的版本 ​ Linux 或 Mac OS 上： pip install -U pip​ Windows 上： ​ python -m pip install -U pip 3、使用包管理工具安装第三方的模块 ​ 举个简单的栗子，使用命令：pip3 install + 模块名。例如安装 PyMySQL 模块，则需要使用命令： pip3 install PyMySQL 4、使用包管理工具卸载模块 使用卸载模块命令即可对相应模块进行移除操作，命令：pip uninstall + 模块名。]]></content>
      <tags>
        <tag>Pip</tag>
        <tag>包管理工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android 中常见问题汇总(附解决办法)]]></title>
    <url>%2F2019%2F06%2F04%2FAndroid%20%E4%B8%AD%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB%2F</url>
    <content type="text"><![CDATA[本片博文主要介绍的是自己在日常工作中遇到的一些问题，在此统一做一个汇总，希望能后帮到大家。 1.Android Studio 编译项目报错：The SourceSet ‘instrumentTest’ is not recognized by the Android Gradle Plugin. 2.导入Eclipse项目报错，Error:Could not determine the class-path for interface com.android.builder.model.AndroidProject. 3.使用Retrofit进行网络请求（post）的时候，log打印日志：java.lang.IllegalArgumentException: @FieldMap parameters can only be used with form encoding. (parameter #1) 4.查看SHAR1值的方法 5.Could not find com.android.tools.build:aapt2:3.2.1-4818971. 6.AAPT2 error: check logs for details 7.java.lang.UnsatisfiedLinkError: dlopen failed: library “/system/lib64/libweibosdkcore.so” needed or dlopened by “/system/lib64/libnativeloader.so” is not accessible for the namespace “classloader-namespace” 8.java.io.IOException: proguard.ParseException: Unexpected keyword ‘com.amap.api.mapcore.xx’ 9.给项目添加 Android 10 的网络权限。 1.Android Studio 编译项目报错：The SourceSet ‘instrumentTest’ is not recognized by the Android Gradle Plugin. 解决办法：gradle 配置，这里的配置中 instrumentTest 已被弃用，不适用于现在的 gradle 版本。用 androidTest 替换 instrumentTest，编译运行即可。 2.导入Eclipse 项目报错，Error:Could not determine the class-path for interface com.android.builder.model.AndroidProject. 解决办法：修改自己本地安装的 gradle 版本号，然后重新编译执行。 3.使用Retrofit进行网络请求（post）的时候，log打印日志：java.lang.IllegalArgumentException: @FieldMap parameters can only be used with form encoding. (parameter #1) 解决办法：当POST请求时，@FormUrlEncoded和@Field简单的表单键值对。两个需要结合使用，否则会报错；@Query请求参数。无论是GET或POST的参数都可以用它来实现 1234正确写法： @FormUrlEncoded @POST(forgetpwd) Observable&lt;ResponseBody&gt; forget(@FieldMap Map&lt;String, String&gt; map); 4.查看SHAR1值的办法。 解决办法： (1).把apk的格式改为压缩文件，进行解压。 (2).在解压出来的文件中获取META-INF文件夹下的CERT.RSA文件。 (3).打开cmd Keytool –printcert –file 后面接文件的路径。 5.Could not find com.android.tools.build:aapt2:3.2.1-4818971. 解决方法：在项目的build.gradle文件中，新增一行google()即可解决 123456allprojects &#123; repositories &#123; jcenter() google()//新增这一行 &#125;&#125; 6.AAPT2 error: check logs for details 解决办法：构建 App 的时候，打开 Build 窗口，点击 “Toggle View” 切换到文本输出。查看log具体输出原因 7.java.lang.UnsatisfiedLinkError: dlopen failed: library “/system/lib64/libweibosdkcore.so” needed or dlopened by “/system/lib64/libnativeloader.so” is not accessible for the namespace “classloader-namespace” 解决办法：根据错误提示，缺少对应的so文件，需要ctrl+shift+n找到so，并拷贝到jniLibs文件夹下，注意对应的文件位置。重新rebuild即可。 8.java.io.IOException: proguard.ParseException: Unexpected keyword ‘com.amap.api.mapcore.xx’ 解决办法： 1.检查关键字是否错误，keep class 等 2.检查包名是否拼写错误 3.检查是否有中文字符，比如括号，点，空格，空格，空格 9.给项目添加 Android 10 的网络权限。解决办法： 1.将如下代码，添加到xml文件中 1234&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;network-security-config&gt; &lt;base-config cleartextTrafficPermitted="true" /&gt;&lt;/network-security-config&gt; ​ 2.在application中引用xml文件即可。]]></content>
      <tags>
        <tag>Android问题</tag>
        <tag>汇总</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[获取 AndroidStudio 的 Share1 值]]></title>
    <url>%2F2019%2F06%2F03%2F%E8%8E%B7%E5%8F%96%20AndroidStudio%20%E7%9A%84%20Share1%20%E5%80%BC%2F</url>
    <content type="text"><![CDATA[这个周末没事，准备做个BaiduMap比较全面的Demo，之前使用Ecplise比较方便，直接复制粘贴就行。但是AndroidStudio获取比较麻烦，刚开始我是一头雾水，不过最终还是研究出来了，记录一下，希望避过我踩过的坑。 步骤： 1、打开AndroidStudio的Terminal。 2、输入keytool -list -keystore D:\Soft\JDK1.8\MyJks.jks 这里需要注意的是：必须是在你存放的JKS文件路径才可以。 3、输入口令，正确之后就可以看到Share1的值 ![显示Share1值 ](/images/显示Share1值 .jpg) 到这里，Share1的值就获取到了，直接复制使用就OK。]]></content>
      <tags>
        <tag>AndroidStudio</tag>
        <tag>Share1值</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于 HEXO 的一些常用命令]]></title>
    <url>%2F2019%2F05%2F28%2F%E5%85%B3%E4%BA%8E%20hexo%20%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[由于电脑系统重装，之前的内容没有备份, 从2017年到2019年的内容都不复存在。不过目前已经重新将架子搭起来，准备继续搞起来！！！欢迎来到[Hexo]（https://hexo.io/）！ 这是你的第一篇文章。 有关详细信息，请查看[文档]（https://hexo.io/docs/）。 如果您在使用Hexo时遇到任何问题，可以在[故障排除]（https://hexo.io/docs/troubleshooting.html）中找到答案，或者您可以在[GitHub]（https://github.com）上找到我。/ hexojs/ HEXO/问题）。 ＃＃ 快速开始 ###创建一个新帖子 1$ hexo new“我的新帖子” 更多信息：[写作]（https://hexo.io/docs/writing.html） ###运行服务器 1$ hexo服务器 更多信息：[服务器]（https://hexo.io/docs/server.html） ###生成静态文件 1$ hexo生成 更多信息：[Generating]（https://hexo.io/docs/generating.html） ###部署到远程站点 1$ hexo deploy 更多信息：[部署]（https://hexo.io/docs/deployment.html）]]></content>
      <tags>
        <tag>hexo 的操作</tag>
      </tags>
  </entry>
</search>
